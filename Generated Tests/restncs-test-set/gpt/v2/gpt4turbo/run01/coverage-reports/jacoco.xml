<?xml version="1.0" encoding="UTF-8" standalone="yes"?><!DOCTYPE report PUBLIC "-//JACOCO//DTD Report 1.1//EN" "report.dtd"><report name="evomaster-benchmark-cs-rest-artificial-ncs"><sessioninfo id="IFTO-PROBOOK-836069d9" start="1725976958413" dump="1725976975389"/><package name="org/restncs/imp"><class name="org/restncs/imp/Bessj" sourcefilename="Bessj.java"><method name="&lt;init&gt;" desc="()V" line="3"><counter type="INSTRUCTION" missed="0" covered="12"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="bessj" desc="(ID)D" line="13"><counter type="INSTRUCTION" missed="47" covered="116"/><counter type="BRANCH" missed="8" covered="14"/><counter type="LINE" missed="10" covered="26"/><counter type="COMPLEXITY" missed="6" covered="6"/><counter type="METHOD" missed="0" covered="1"/></method><method name="bessj0" desc="(D)D" line="71"><counter type="INSTRUCTION" missed="127" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="12" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="bessj1" desc="(D)D" line="97"><counter type="INSTRUCTION" missed="136" covered="0"/><counter type="BRANCH" missed="4" covered="0"/><counter type="LINE" missed="13" covered="0"/><counter type="COMPLEXITY" missed="3" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="310" covered="128"/><counter type="BRANCH" missed="14" covered="14"/><counter type="LINE" missed="35" covered="30"/><counter type="COMPLEXITY" missed="11" covered="7"/><counter type="METHOD" missed="2" covered="2"/><counter type="CLASS" missed="0" covered="1"/></class><class name="org/restncs/imp/TriangleClassification" sourcefilename="TriangleClassification.java"><method name="&lt;init&gt;" desc="()V" line="3"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="classify" desc="(III)I" line="7"><counter type="INSTRUCTION" missed="0" covered="64"/><counter type="BRANCH" missed="6" covered="22"/><counter type="LINE" missed="0" covered="10"/><counter type="COMPLEXITY" missed="6" covered="9"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="3" covered="64"/><counter type="BRANCH" missed="6" covered="22"/><counter type="LINE" missed="1" covered="10"/><counter type="COMPLEXITY" missed="7" covered="9"/><counter type="METHOD" missed="1" covered="1"/><counter type="CLASS" missed="0" covered="1"/></class><class name="org/restncs/imp/Expint" sourcefilename="Expint.java"><method name="&lt;init&gt;" desc="()V" line="3"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="exe" desc="(ID)D" line="13"><counter type="INSTRUCTION" missed="99" covered="111"/><counter type="BRANCH" missed="15" covered="15"/><counter type="LINE" missed="16" covered="21"/><counter type="COMPLEXITY" missed="10" covered="6"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="102" covered="111"/><counter type="BRANCH" missed="15" covered="15"/><counter type="LINE" missed="17" covered="21"/><counter type="COMPLEXITY" missed="11" covered="6"/><counter type="METHOD" missed="1" covered="1"/><counter type="CLASS" missed="0" covered="1"/></class><class name="org/restncs/imp/Fisher" sourcefilename="Fisher.java"><method name="&lt;init&gt;" desc="()V" line="5"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="exe" desc="(IID)D" line="10"><counter type="INSTRUCTION" missed="87" covered="148"/><counter type="BRANCH" missed="9" covered="7"/><counter type="LINE" missed="15" covered="23"/><counter type="COMPLEXITY" missed="7" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="90" covered="148"/><counter type="BRANCH" missed="9" covered="7"/><counter type="LINE" missed="16" covered="23"/><counter type="COMPLEXITY" missed="8" covered="2"/><counter type="METHOD" missed="1" covered="1"/><counter type="CLASS" missed="0" covered="1"/></class><class name="org/restncs/imp/Remainder" sourcefilename="Remainder.java"><method name="&lt;init&gt;" desc="()V" line="3"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="exe" desc="(II)I" line="5"><counter type="INSTRUCTION" missed="54" covered="61"/><counter type="BRANCH" missed="11" covered="13"/><counter type="LINE" missed="8" covered="17"/><counter type="COMPLEXITY" missed="7" covered="6"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="57" covered="61"/><counter type="BRANCH" missed="11" covered="13"/><counter type="LINE" missed="9" covered="17"/><counter type="COMPLEXITY" missed="8" covered="6"/><counter type="METHOD" missed="1" covered="1"/><counter type="CLASS" missed="0" covered="1"/></class><class name="org/restncs/imp/Gammq" sourcefilename="Gammq.java"><method name="&lt;init&gt;" desc="()V" line="2"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="gammln" desc="(D)D" line="13"><counter type="INSTRUCTION" missed="0" covered="75"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="7"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="gcf" desc="(DD)V" line="30"><counter type="INSTRUCTION" missed="109" covered="0"/><counter type="BRANCH" missed="10" covered="0"/><counter type="LINE" missed="19" covered="0"/><counter type="COMPLEXITY" missed="6" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="gser" desc="(DD)V" line="56"><counter type="INSTRUCTION" missed="18" covered="62"/><counter type="BRANCH" missed="4" covered="4"/><counter type="LINE" missed="4" covered="11"/><counter type="COMPLEXITY" missed="3" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="exe" desc="(DD)D" line="80"><counter type="INSTRUCTION" missed="7" covered="28"/><counter type="BRANCH" missed="1" covered="5"/><counter type="LINE" missed="2" covered="4"/><counter type="COMPLEXITY" missed="1" covered="3"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="134" covered="168"/><counter type="BRANCH" missed="15" covered="11"/><counter type="LINE" missed="25" covered="23"/><counter type="COMPLEXITY" missed="10" covered="8"/><counter type="METHOD" missed="1" covered="4"/><counter type="CLASS" missed="0" covered="1"/></class><sourcefile name="Gammq.java"><line nr="2" mi="0" ci="3" mb="0" cb="0"/><line nr="13" mi="0" ci="27" mb="0" cb="0"/><line nr="17" mi="0" ci="4" mb="0" cb="0"/><line nr="18" mi="0" ci="4" mb="0" cb="0"/><line nr="19" mi="0" ci="9" mb="0" cb="0"/><line nr="20" mi="0" ci="2" mb="0" cb="0"/><line nr="21" mi="0" ci="19" mb="0" cb="2"/><line nr="22" mi="0" ci="10" mb="0" cb="0"/><line nr="30" mi="5" ci="0" mb="0" cb="0"/><line nr="31" mi="6" ci="0" mb="0" cb="0"/><line nr="32" mi="2" ci="0" mb="0" cb="0"/><line nr="33" mi="4" ci="0" mb="0" cb="0"/><line nr="34" mi="2" ci="0" mb="0" cb="0"/><line nr="35" mi="7" ci="0" mb="2" cb="0"/><line nr="36" mi="9" ci="0" mb="0" cb="0"/><line nr="37" mi="4" ci="0" mb="0" cb="0"/><line nr="38" mi="6" ci="0" mb="0" cb="0"/><line nr="39" mi="7" ci="0" mb="2" cb="0"/><line nr="40" mi="6" ci="0" mb="0" cb="0"/><line nr="41" mi="7" ci="0" mb="2" cb="0"/><line nr="42" mi="4" ci="0" mb="0" cb="0"/><line nr="43" mi="4" ci="0" mb="0" cb="0"/><line nr="44" mi="4" ci="0" mb="0" cb="0"/><line nr="45" mi="8" ci="0" mb="2" cb="0"/><line nr="47" mi="8" ci="0" mb="2" cb="0"/><line nr="48" mi="15" ci="0" mb="0" cb="0"/><line nr="49" mi="1" ci="0" mb="0" cb="0"/><line nr="56" mi="0" ci="5" mb="0" cb="0"/><line nr="58" mi="0" ci="4" mb="1" cb="1"/><line nr="59" mi="9" ci="0" mb="2" cb="0"/><line nr="60" mi="3" ci="0" mb="0" cb="0"/><line nr="61" mi="1" ci="0" mb="0" cb="0"/><line nr="64" mi="0" ci="2" mb="0" cb="0"/><line nr="65" mi="0" ci="6" mb="0" cb="0"/><line nr="66" mi="0" ci="7" mb="1" cb="1"/><line nr="67" mi="0" ci="4" mb="0" cb="0"/><line nr="68" mi="0" ci="6" mb="0" cb="0"/><line nr="69" mi="0" ci="4" mb="0" cb="0"/><line nr="70" mi="0" ci="8" mb="0" cb="2"/><line nr="71" mi="0" ci="15" mb="0" cb="0"/><line nr="72" mi="0" ci="1" mb="0" cb="0"/><line nr="75" mi="5" ci="0" mb="0" cb="0"/><line nr="80" mi="0" ci="13" mb="0" cb="4"/><line nr="81" mi="0" ci="6" mb="1" cb="1"/><line nr="82" mi="0" ci="4" mb="0" cb="0"/><line nr="83" mi="0" ci="5" mb="0" cb="0"/><line nr="86" mi="4" ci="0" mb="0" cb="0"/><line nr="87" mi="3" ci="0" mb="0" cb="0"/><counter type="INSTRUCTION" missed="134" covered="168"/><counter type="BRANCH" missed="15" covered="11"/><counter type="LINE" missed="25" covered="23"/><counter type="COMPLEXITY" missed="10" covered="8"/><counter type="METHOD" missed="1" covered="4"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="Bessj.java"><line nr="3" mi="0" ci="2" mb="0" cb="0"/><line nr="5" mi="0" ci="3" mb="0" cb="0"/><line nr="6" mi="0" ci="3" mb="0" cb="0"/><line nr="7" mi="0" ci="4" mb="0" cb="0"/><line nr="13" mi="0" ci="3" mb="1" cb="1"/><line nr="14" mi="5" ci="0" mb="0" cb="0"/><line nr="16" mi="0" ci="3" mb="0" cb="0"/><line nr="18" mi="0" ci="4" mb="1" cb="1"/><line nr="19" mi="2" ci="0" mb="0" cb="0"/><line nr="20" mi="0" ci="5" mb="1" cb="1"/><line nr="21" mi="4" ci="0" mb="0" cb="0"/><line nr="22" mi="3" ci="0" mb="0" cb="0"/><line nr="23" mi="3" ci="0" mb="0" cb="0"/><line nr="25" mi="7" ci="0" mb="2" cb="0"/><line nr="26" mi="9" ci="0" mb="0" cb="0"/><line nr="27" mi="2" ci="0" mb="0" cb="0"/><line nr="28" mi="2" ci="0" mb="0" cb="0"/><line nr="31" mi="3" ci="0" mb="0" cb="0"/><line nr="33" mi="0" ci="4" mb="0" cb="0"/><line nr="34" mi="0" ci="14" mb="0" cb="0"/><line nr="35" mi="0" ci="2" mb="0" cb="0"/><line nr="36" mi="0" ci="6" mb="0" cb="0"/><line nr="37" mi="0" ci="2" mb="0" cb="0"/><line nr="39" mi="0" ci="6" mb="0" cb="2"/><line nr="40" mi="0" ci="9" mb="0" cb="0"/><line nr="41" mi="0" ci="2" mb="0" cb="0"/><line nr="42" mi="0" ci="2" mb="0" cb="0"/><line nr="44" mi="0" ci="5" mb="0" cb="2"/><line nr="45" mi="0" ci="4" mb="0" cb="0"/><line nr="46" mi="0" ci="4" mb="0" cb="0"/><line nr="47" mi="0" ci="4" mb="0" cb="0"/><line nr="48" mi="0" ci="4" mb="0" cb="0"/><line nr="51" mi="0" ci="2" mb="0" cb="2"/><line nr="52" mi="0" ci="4" mb="0" cb="0"/><line nr="54" mi="0" ci="6" mb="0" cb="2"/><line nr="56" mi="0" ci="3" mb="0" cb="2"/><line nr="57" mi="0" ci="2" mb="0" cb="0"/><line nr="60" mi="0" ci="6" mb="0" cb="0"/><line nr="61" mi="0" ci="4" mb="0" cb="0"/><line nr="63" mi="7" ci="6" mb="3" cb="1"/><line nr="71" mi="7" ci="0" mb="2" cb="0"/><line nr="72" mi="4" ci="0" mb="0" cb="0"/><line nr="73" mi="22" ci="0" mb="0" cb="0"/><line nr="75" mi="22" ci="0" mb="0" cb="0"/><line nr="77" mi="5" ci="0" mb="0" cb="0"/><line nr="79" mi="4" ci="0" mb="0" cb="0"/><line nr="80" mi="4" ci="0" mb="0" cb="0"/><line nr="81" mi="4" ci="0" mb="0" cb="0"/><line nr="82" mi="18" ci="0" mb="0" cb="0"/><line nr="84" mi="18" ci="0" mb="0" cb="0"/><line nr="87" mi="17" ci="0" mb="0" cb="0"/><line nr="89" mi="2" ci="0" mb="0" cb="0"/><line nr="97" mi="7" ci="0" mb="2" cb="0"/><line nr="98" mi="4" ci="0" mb="0" cb="0"/><line nr="99" mi="24" ci="0" mb="0" cb="0"/><line nr="101" mi="22" ci="0" mb="0" cb="0"/><line nr="103" mi="5" ci="0" mb="0" cb="0"/><line nr="105" mi="4" ci="0" mb="0" cb="0"/><line nr="106" mi="4" ci="0" mb="0" cb="0"/><line nr="107" mi="4" ci="0" mb="0" cb="0"/><line nr="108" mi="18" ci="0" mb="0" cb="0"/><line nr="110" mi="18" ci="0" mb="0" cb="0"/><line nr="113" mi="17" ci="0" mb="0" cb="0"/><line nr="114" mi="7" ci="0" mb="2" cb="0"/><line nr="117" mi="2" ci="0" mb="0" cb="0"/><counter type="INSTRUCTION" missed="310" covered="128"/><counter type="BRANCH" missed="14" covered="14"/><counter type="LINE" missed="35" covered="30"/><counter type="COMPLEXITY" missed="11" covered="7"/><counter type="METHOD" missed="2" covered="2"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="Remainder.java"><line nr="3" mi="3" ci="0" mb="0" cb="0"/><line nr="5" mi="0" ci="2" mb="0" cb="0"/><line nr="6" mi="0" ci="2" mb="0" cb="0"/><line nr="7" mi="0" ci="2" mb="0" cb="0"/><line nr="9" mi="0" ci="3" mb="0" cb="2"/><line nr="10" mi="0" ci="3" mb="0" cb="2"/><line nr="11" mi="0" ci="2" mb="0" cb="2"/><line nr="12" mi="0" ci="2" mb="1" cb="1"/><line nr="13" mi="0" ci="5" mb="0" cb="2"/><line nr="14" mi="0" ci="4" mb="0" cb="0"/><line nr="15" mi="0" ci="4" mb="0" cb="0"/><line nr="16" mi="0" ci="5" mb="0" cb="0"/><line nr="20" mi="10" ci="0" mb="4" cb="0"/><line nr="21" mi="4" ci="0" mb="0" cb="0"/><line nr="22" mi="4" ci="0" mb="0" cb="0"/><line nr="23" mi="5" ci="0" mb="0" cb="0"/><line nr="26" mi="0" ci="2" mb="1" cb="1"/><line nr="28" mi="14" ci="0" mb="4" cb="0"/><line nr="29" mi="4" ci="0" mb="0" cb="0"/><line nr="30" mi="4" ci="0" mb="0" cb="0"/><line nr="31" mi="5" ci="0" mb="0" cb="0"/><line nr="34" mi="0" ci="5" mb="0" cb="2"/><line nr="35" mi="0" ci="4" mb="0" cb="0"/><line nr="37" mi="4" ci="9" mb="1" cb="1"/><line nr="38" mi="0" ci="5" mb="0" cb="0"/><line nr="40" mi="0" ci="2" mb="0" cb="0"/><counter type="INSTRUCTION" missed="57" covered="61"/><counter type="BRANCH" missed="11" covered="13"/><counter type="LINE" missed="9" covered="17"/><counter type="COMPLEXITY" missed="8" covered="6"/><counter type="METHOD" missed="1" covered="1"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="Expint.java"><line nr="3" mi="3" ci="0" mb="0" cb="0"/><line nr="13" mi="0" ci="4" mb="0" cb="0"/><line nr="15" mi="0" ci="15" mb="2" cb="8"/><line nr="16" mi="0" ci="5" mb="0" cb="0"/><line nr="18" mi="0" ci="2" mb="1" cb="1"/><line nr="19" mi="7" ci="0" mb="0" cb="0"/><line nr="21" mi="0" ci="4" mb="0" cb="2"/><line nr="22" mi="0" ci="6" mb="0" cb="0"/><line nr="24" mi="0" ci="4" mb="1" cb="1"/><line nr="25" mi="0" ci="5" mb="0" cb="0"/><line nr="26" mi="0" ci="2" mb="0" cb="0"/><line nr="27" mi="0" ci="4" mb="0" cb="0"/><line nr="28" mi="0" ci="2" mb="0" cb="0"/><line nr="30" mi="0" ci="9" mb="1" cb="1"/><line nr="31" mi="0" ci="8" mb="0" cb="0"/><line nr="32" mi="0" ci="4" mb="0" cb="0"/><line nr="33" mi="0" ci="8" mb="0" cb="0"/><line nr="34" mi="0" ci="6" mb="0" cb="0"/><line nr="35" mi="0" ci="4" mb="0" cb="0"/><line nr="36" mi="0" ci="4" mb="0" cb="0"/><line nr="38" mi="0" ci="7" mb="0" cb="2"/><line nr="39" mi="0" ci="6" mb="0" cb="0"/><line nr="43" mi="5" ci="0" mb="0" cb="0"/><line nr="45" mi="13" ci="0" mb="2" cb="0"/><line nr="46" mi="2" ci="0" mb="0" cb="0"/><line nr="48" mi="9" ci="0" mb="2" cb="0"/><line nr="49" mi="8" ci="0" mb="0" cb="0"/><line nr="51" mi="3" ci="0" mb="2" cb="0"/><line nr="52" mi="9" ci="0" mb="0" cb="0"/><line nr="54" mi="2" ci="0" mb="0" cb="0"/><line nr="56" mi="7" ci="0" mb="2" cb="0"/><line nr="57" mi="7" ci="0" mb="0" cb="0"/><line nr="59" mi="8" ci="0" mb="0" cb="0"/><line nr="62" mi="4" ci="0" mb="0" cb="0"/><line nr="64" mi="8" ci="0" mb="2" cb="0"/><line nr="65" mi="2" ci="0" mb="0" cb="0"/><line nr="68" mi="5" ci="0" mb="0" cb="0"/><line nr="73" mi="0" ci="2" mb="0" cb="0"/><counter type="INSTRUCTION" missed="102" covered="111"/><counter type="BRANCH" missed="15" covered="15"/><counter type="LINE" missed="17" covered="21"/><counter type="COMPLEXITY" missed="11" covered="6"/><counter type="METHOD" missed="1" covered="1"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="Fisher.java"><line nr="5" mi="3" ci="0" mb="0" cb="0"/><line nr="10" mi="0" ci="10" mb="0" cb="0"/><line nr="11" mi="0" ci="10" mb="0" cb="0"/><line nr="12" mi="0" ci="8" mb="0" cb="0"/><line nr="13" mi="0" ci="6" mb="0" cb="0"/><line nr="15" mi="0" ci="3" mb="1" cb="1"/><line nr="16" mi="3" ci="0" mb="2" cb="0"/><line nr="17" mi="3" ci="0" mb="0" cb="0"/><line nr="18" mi="2" ci="0" mb="0" cb="0"/><line nr="19" mi="6" ci="0" mb="0" cb="0"/><line nr="20" mi="8" ci="0" mb="0" cb="0"/><line nr="22" mi="5" ci="0" mb="0" cb="0"/><line nr="23" mi="9" ci="0" mb="0" cb="0"/><line nr="25" mi="0" ci="3" mb="1" cb="1"/><line nr="26" mi="3" ci="0" mb="0" cb="0"/><line nr="27" mi="6" ci="0" mb="0" cb="0"/><line nr="28" mi="5" ci="0" mb="0" cb="0"/><line nr="30" mi="0" ci="4" mb="0" cb="0"/><line nr="31" mi="0" ci="4" mb="0" cb="0"/><line nr="34" mi="0" ci="6" mb="0" cb="0"/><line nr="36" mi="0" ci="3" mb="1" cb="1"/><line nr="37" mi="9" ci="0" mb="2" cb="0"/><line nr="38" mi="13" ci="0" mb="0" cb="0"/><line nr="39" mi="11" ci="0" mb="0" cb="0"/><line nr="42" mi="0" ci="9" mb="0" cb="0"/><line nr="43" mi="0" ci="10" mb="0" cb="0"/><line nr="44" mi="0" ci="16" mb="0" cb="0"/><line nr="47" mi="0" ci="4" mb="0" cb="0"/><line nr="48" mi="0" ci="4" mb="0" cb="0"/><line nr="49" mi="0" ci="4" mb="0" cb="0"/><line nr="50" mi="0" ci="9" mb="0" cb="2"/><line nr="51" mi="0" ci="4" mb="0" cb="0"/><line nr="52" mi="0" ci="12" mb="0" cb="0"/><line nr="53" mi="0" ci="9" mb="0" cb="0"/><line nr="56" mi="0" ci="4" mb="1" cb="1"/><line nr="57" mi="2" ci="0" mb="0" cb="0"/><line nr="58" mi="0" ci="4" mb="1" cb="1"/><line nr="59" mi="2" ci="0" mb="0" cb="0"/><line nr="61" mi="0" ci="2" mb="0" cb="0"/><counter type="INSTRUCTION" missed="90" covered="148"/><counter type="BRANCH" missed="9" covered="7"/><counter type="LINE" missed="16" covered="23"/><counter type="COMPLEXITY" missed="8" covered="2"/><counter type="METHOD" missed="1" covered="1"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="TriangleClassification.java"><line nr="3" mi="3" ci="0" mb="0" cb="0"/><line nr="7" mi="0" ci="6" mb="2" cb="4"/><line nr="8" mi="0" ci="2" mb="0" cb="0"/><line nr="11" mi="0" ci="6" mb="0" cb="4"/><line nr="12" mi="0" ci="2" mb="0" cb="0"/><line nr="15" mi="0" ci="6" mb="0" cb="0"/><line nr="17" mi="0" ci="27" mb="2" cb="10"/><line nr="20" mi="0" ci="2" mb="0" cb="0"/><line nr="23" mi="0" ci="9" mb="2" cb="4"/><line nr="24" mi="0" ci="2" mb="0" cb="0"/><line nr="26" mi="0" ci="2" mb="0" cb="0"/><counter type="INSTRUCTION" missed="3" covered="64"/><counter type="BRANCH" missed="6" covered="22"/><counter type="LINE" missed="1" covered="10"/><counter type="COMPLEXITY" missed="7" covered="9"/><counter type="METHOD" missed="1" covered="1"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><counter type="INSTRUCTION" missed="696" covered="680"/><counter type="BRANCH" missed="70" covered="82"/><counter type="LINE" missed="103" covered="124"/><counter type="COMPLEXITY" missed="55" covered="38"/><counter type="METHOD" missed="7" covered="10"/><counter type="CLASS" missed="0" covered="6"/></package><package name="org/restncs"><class name="org/restncs/Dto" sourcefilename="Dto.java"><method name="&lt;init&gt;" desc="()V" line="3"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/><counter type="CLASS" missed="0" covered="1"/></class><class name="org/restncs/NcsRest" sourcefilename="NcsRest.java"><method name="&lt;init&gt;" desc="()V" line="12"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="checkTriangle" desc="(Ljava/lang/Integer;Ljava/lang/Integer;Ljava/lang/Integer;)Lorg/springframework/http/ResponseEntity;" line="28"><counter type="INSTRUCTION" missed="0" covered="17"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="bessj" desc="(Ljava/lang/Integer;Ljava/lang/Double;)Lorg/springframework/http/ResponseEntity;" line="43"><counter type="INSTRUCTION" missed="0" covered="32"/><counter type="BRANCH" missed="1" covered="3"/><counter type="LINE" missed="0" covered="6"/><counter type="COMPLEXITY" missed="1" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="expint" desc="(Ljava/lang/Integer;Ljava/lang/Double;)Lorg/springframework/http/ResponseEntity;" line="65"><counter type="INSTRUCTION" missed="0" covered="20"/><counter type="LINE" missed="0" covered="5"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="fisher" desc="(Ljava/lang/Integer;Ljava/lang/Integer;Ljava/lang/Double;)Lorg/springframework/http/ResponseEntity;" line="84"><counter type="INSTRUCTION" missed="5" covered="29"/><counter type="BRANCH" missed="1" covered="3"/><counter type="LINE" missed="2" covered="5"/><counter type="COMPLEXITY" missed="1" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="gammq" desc="(Ljava/lang/Double;Ljava/lang/Double;)Lorg/springframework/http/ResponseEntity;" line="108"><counter type="INSTRUCTION" missed="0" covered="25"/><counter type="LINE" missed="0" covered="6"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="remainder" desc="(Ljava/lang/Integer;Ljava/lang/Integer;)Lorg/springframework/http/ResponseEntity;" line="126"><counter type="INSTRUCTION" missed="4" covered="35"/><counter type="BRANCH" missed="4" covered="4"/><counter type="LINE" missed="1" covered="5"/><counter type="COMPLEXITY" missed="4" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="9" covered="161"/><counter type="BRANCH" missed="6" covered="10"/><counter type="LINE" missed="3" covered="31"/><counter type="COMPLEXITY" missed="6" covered="9"/><counter type="METHOD" missed="0" covered="7"/><counter type="CLASS" missed="0" covered="1"/></class><class name="org/restncs/NcsApplication" sourcefilename="NcsApplication.java"><method name="&lt;init&gt;" desc="()V" line="16"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="main" desc="([Ljava/lang/String;)V" line="22"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="piApi" desc="()Lspringfox/documentation/spring/web/plugins/Docket;" line="27"><counter type="INSTRUCTION" missed="0" covered="13"/><counter type="LINE" missed="0" covered="5"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="apiInfo" desc="()Lspringfox/documentation/service/ApiInfo;" line="35"><counter type="INSTRUCTION" missed="0" covered="11"/><counter type="LINE" missed="0" covered="5"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="5" covered="27"/><counter type="LINE" missed="2" covered="11"/><counter type="COMPLEXITY" missed="1" covered="3"/><counter type="METHOD" missed="1" covered="3"/><counter type="CLASS" missed="0" covered="1"/></class><sourcefile name="NcsApplication.java"><line nr="16" mi="0" ci="3" mb="0" cb="0"/><line nr="22" mi="4" ci="0" mb="0" cb="0"/><line nr="23" mi="1" ci="0" mb="0" cb="0"/><line nr="27" mi="0" ci="6" mb="0" cb="0"/><line nr="28" mi="0" ci="2" mb="0" cb="0"/><line nr="29" mi="0" ci="2" mb="0" cb="0"/><line nr="30" mi="0" ci="2" mb="0" cb="0"/><line nr="31" mi="0" ci="1" mb="0" cb="0"/><line nr="35" mi="0" ci="5" mb="0" cb="0"/><line nr="36" mi="0" ci="2" mb="0" cb="0"/><line nr="37" mi="0" ci="2" mb="0" cb="0"/><line nr="38" mi="0" ci="1" mb="0" cb="0"/><line nr="39" mi="0" ci="1" mb="0" cb="0"/><counter type="INSTRUCTION" missed="5" covered="27"/><counter type="LINE" missed="2" covered="11"/><counter type="COMPLEXITY" missed="1" covered="3"/><counter type="METHOD" missed="1" covered="3"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="NcsRest.java"><line nr="12" mi="0" ci="3" mb="0" cb="0"/><line nr="28" mi="0" ci="4" mb="0" cb="0"/><line nr="29" mi="0" ci="10" mb="0" cb="0"/><line nr="31" mi="0" ci="3" mb="0" cb="0"/><line nr="43" mi="0" ci="8" mb="1" cb="3"/><line nr="44" mi="0" ci="4" mb="0" cb="0"/><line nr="47" mi="0" ci="4" mb="0" cb="0"/><line nr="48" mi="0" ci="4" mb="0" cb="0"/><line nr="49" mi="0" ci="9" mb="0" cb="0"/><line nr="51" mi="0" ci="3" mb="0" cb="0"/><line nr="65" mi="0" ci="4" mb="0" cb="0"/><line nr="66" mi="0" ci="8" mb="0" cb="0"/><line nr="67" mi="0" ci="3" mb="0" cb="0"/><line nr="68" mi="0" ci="1" mb="0" cb="0"/><line nr="69" mi="0" ci="4" mb="0" cb="0"/><line nr="84" mi="0" ci="8" mb="1" cb="3"/><line nr="85" mi="0" ci="4" mb="0" cb="0"/><line nr="89" mi="0" ci="4" mb="0" cb="0"/><line nr="90" mi="0" ci="10" mb="0" cb="0"/><line nr="91" mi="0" ci="3" mb="0" cb="0"/><line nr="92" mi="1" ci="0" mb="0" cb="0"/><line nr="93" mi="4" ci="0" mb="0" cb="0"/><line nr="108" mi="0" ci="4" mb="0" cb="0"/><line nr="109" mi="0" ci="4" mb="0" cb="0"/><line nr="110" mi="0" ci="9" mb="0" cb="0"/><line nr="111" mi="0" ci="3" mb="0" cb="0"/><line nr="112" mi="0" ci="1" mb="0" cb="0"/><line nr="113" mi="0" ci="4" mb="0" cb="0"/><line nr="126" mi="0" ci="2" mb="0" cb="0"/><line nr="127" mi="0" ci="18" mb="4" cb="4"/><line nr="128" mi="4" ci="0" mb="0" cb="0"/><line nr="131" mi="0" ci="4" mb="0" cb="0"/><line nr="132" mi="0" ci="8" mb="0" cb="0"/><line nr="134" mi="0" ci="3" mb="0" cb="0"/><counter type="INSTRUCTION" missed="9" covered="161"/><counter type="BRANCH" missed="6" covered="10"/><counter type="LINE" missed="3" covered="31"/><counter type="COMPLEXITY" missed="6" covered="9"/><counter type="METHOD" missed="0" covered="7"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="Dto.java"><line nr="3" mi="0" ci="3" mb="0" cb="0"/><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><counter type="INSTRUCTION" missed="14" covered="191"/><counter type="BRANCH" missed="6" covered="10"/><counter type="LINE" missed="5" covered="43"/><counter type="COMPLEXITY" missed="7" covered="13"/><counter type="METHOD" missed="1" covered="11"/><counter type="CLASS" missed="0" covered="3"/></package><counter type="INSTRUCTION" missed="710" covered="871"/><counter type="BRANCH" missed="76" covered="92"/><counter type="LINE" missed="108" covered="167"/><counter type="COMPLEXITY" missed="62" covered="51"/><counter type="METHOD" missed="8" covered="21"/><counter type="CLASS" missed="0" covered="9"/></report>