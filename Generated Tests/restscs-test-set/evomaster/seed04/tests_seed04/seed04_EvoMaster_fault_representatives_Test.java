package org.restscs;
import  org.junit.AfterClass;
import  org.junit.BeforeClass;
import  org.junit.Before;
import  org.junit.Test;
import static org.junit.Assert.*;
import  java.util.Map;
import  java.util.List;
import static org.evomaster.client.java.controller.api.EMTestUtils.*;
import  org.evomaster.client.java.controller.SutHandler;
import  io.restassured.RestAssured;
import static io.restassured.RestAssured.given;
import  io.restassured.response.ValidatableResponse;
import static org.hamcrest.Matchers.*;
import  io.restassured.config.JsonConfig;
import  io.restassured.path.json.config.JsonPathConfig;
import static io.restassured.config.RedirectConfig.redirectConfig;
import static org.evomaster.client.java.controller.contentMatchers.NumberMatcher.*;
import static org.evomaster.client.java.controller.contentMatchers.StringMatcher.*;
import static org.evomaster.client.java.controller.contentMatchers.SubStringMatcher.*;
import static org.evomaster.client.java.controller.expect.ExpectationHandler.expectationHandler;
import  org.evomaster.client.java.controller.expect.ExpectationHandler;
import  io.restassured.path.json.JsonPath;
import  java.util.Arrays;




/**
 * This file was automatically generated by EvoMaster on 2024-08-01T18:55:27.274700-03:00[America/Araguaina]
 * <br>
 * The generated test suite contains 122 tests
 * <br>
 * Covered targets: 1029
 * <br>
 * Used time: 1h 0m 0s
 * <br>
 * Needed budget for current results: 99%
 * <br>
 * This file contains one example of each category of fault. The test cases in this file are a subset of the set of test cases likely to indicate faults.
 */
public class seed04_EvoMaster_fault_representatives_Test {

    
    private static final SutHandler controller = new em.embedded.org.restscs.EmbeddedEvoMasterController();
    private static String baseUrlOfSut;
    /** [ems] - expectations master switch - is the variable that activates/deactivates expectations individual test cases
    * by default, expectations are turned off. The variable needs to be set to [true] to enable expectations
    */
    private static boolean ems = false;
    /**
    * sco - supported code oracle - checking that the response status code is among those supported according to the schema
    */
    private static boolean sco = false;
    
    
    @BeforeClass
    public static void initClass() {
        controller.setupForGeneratedTest();
        baseUrlOfSut = controller.startSut();
        controller.registerOrExecuteInitSqlCommandsIfNeeded();
        assertNotNull(baseUrlOfSut);
        RestAssured.enableLoggingOfRequestAndResponseIfValidationFails();
        RestAssured.useRelaxedHTTPSValidation();
        RestAssured.urlEncodingEnabled = false;
        RestAssured.config = RestAssured.config()
            .jsonConfig(JsonConfig.jsonConfig().numberReturnType(JsonPathConfig.NumberReturnType.DOUBLE))
            .redirect(redirectConfig().followRedirects(false));
    }
    
    
    @AfterClass
    public static void tearDown() {
        controller.stopSut();
    }
    
    
    @Before
    public void initTest() {
        controller.resetStateOfSUT();
    }
    
    
    
    
    @Test(timeout = 60000)
    public void test_0() throws Exception {
        ExpectationHandler expectationHandler = expectationHandler();
        
        ValidatableResponse res_0 = given().accept("*/*")
                .get(baseUrlOfSut + "/v2/api-docs")
                .then()
                .statusCode(200);
        
        expectationHandler.expect(ems)
            /*
             Note: No supported codes appear to be defined. https://swagger.io/docs/specification/describing-responses/.
             This is somewhat unexpected, so the code below is likely to lead to a failed expectation
            */
            .that(sco, Arrays.asList().contains(res_0.extract().statusCode()));
    }
    
    
    @Test(timeout = 60000)
    public void test_1() throws Exception {
        
        given().accept("*/*")
                .header("x-EMextraHeader123", "_EM_715_XYZ_")
                .get(baseUrlOfSut + "/api/ordered4/rW/_EM_713_XYZ_/xD0T/_EM_714_XYZ_")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("text/plain")
                .body(containsString("unordered"));
        
    }
    
    
    @Test(timeout = 60000)
    public void test_2() throws Exception {
        
        given().accept("*/*")
                .header("x-EMextraHeader123", "")
                .get(baseUrlOfSut + "/api/ordered4/_EM_0_XYZ_/_EM_1_XYZ_/_EM_3_XYZ_/_EM_2_XYZ_?EMextraParam123=_EM_4_XYZ_")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("text/plain")
                .body(containsString("unordered"));
        
    }
    
    
    @Test(timeout = 60000)
    public void test_3() throws Exception {
        
        given().accept("*/*")
                .header("x-EMextraHeader123", "")
                .get(baseUrlOfSut + "/api/ordered4/QRVPb/MoVx/mE/coxwi")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("text/plain")
                .body(containsString("unordered"));
        
    }
    
    
    @Test(timeout = 60000)
    public void test_4() throws Exception {
        
        given().accept("*/*")
                .header("x-EMextraHeader123", "")
                .get(baseUrlOfSut + "/api/ordered4/QRVNb/_EM_2526_XYZ_/_EM_2528_XYZ_/_EM_2527_XYZ_")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("text/plain")
                .body(containsString("unordered"));
        
    }
    
    
    @Test(timeout = 60000)
    public void test_5() throws Exception {
        
        given().accept("*/*")
                .header("x-EMextraHeader123", "42")
                .get(baseUrlOfSut + "/api/filesuffix/_EM_23_XYZ_/_EM_24_XYZ_?EMextraParam123=42")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("text/plain")
                .body(containsString("0"));
        
    }
    
    
    @Test(timeout = 60000)
    public void test_6() throws Exception {
        
        given().accept("*/*")
                .header("x-EMextraHeader123", "_EM_42_XYZ_")
                .get(baseUrlOfSut + "/api/calc/pi/2315694.255119966/68.397113964118")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("text/plain")
                .body(containsString("3.141592653589793"));
        
    }
    
    
    @Test(timeout = 60000)
    public void test_7() throws Exception {
        
        given().accept("*/*")
                .header("x-EMextraHeader123", "")
                .get(baseUrlOfSut + "/api/pat/_EM_334_XYZ_/hK?EMextraParam123=_EM_335_XYZ_")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("text/plain")
                .body(containsString("0"));
        
    }
    
    
    @Test(timeout = 60000)
    public void test_8() throws Exception {
        
        given().accept("*/*")
                .header("x-EMextraHeader123", "")
                .get(baseUrlOfSut + "/api/ordered4/QRVNb/MpVx4G/itZOR/ARVN")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("text/plain")
                .body(containsString("unordered"));
        
    }
    
    
    @Test(timeout = 60000)
    public void test_9() throws Exception {
        
        given().accept("*/*")
                .header("x-EMextraHeader123", "")
                .get(baseUrlOfSut + "/api/ordered4/QRVNb/MoVx4G/_EM_2528_XYZ_/_EM_2563_XYZ_")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("text/plain")
                .body(containsString("unordered"));
        
    }
    
    
    @Test(timeout = 60000)
    public void test_10() throws Exception {
        
        given().accept("*/*")
                .header("x-EMextraHeader123", "_EM_8_XYZ_")
                .get(baseUrlOfSut + "/api/calc/e/1.0/0.0?EMextraParam123=_EM_7_XYZ_")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("text/plain")
                .body(containsString("2.718281828459045"));
        
    }
    
    
    @Test(timeout = 60000)
    public void test_11() throws Exception {
        
        given().accept("*/*")
                .header("x-EMextraHeader123", "")
                .get(baseUrlOfSut + "/api/cookie/userid/6Cj/2bbrV")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("text/plain")
                .body(containsString("0"));
        
    }
    
    
    @Test(timeout = 60000)
    public void test_12() throws Exception {
        
        given().accept("*/*")
                .header("x-EMextraHeader123", "")
                .get(baseUrlOfSut + "/api/ordered4/QRVPb/MoVx4%22/swu5/e1YAAO?EMextraParam123=_EM_2529_XYZ_")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("text/plain")
                .body(containsString("unordered"));
        
    }
    
    
    @Test(timeout = 60000)
    public void test_13() throws Exception {
        
        given().accept("*/*")
                .header("x-EMextraHeader123", "_EM_13_XYZ_")
                .get(baseUrlOfSut + "/api/cookie/_EM_9_XYZ_/_EM_11_XYZ_/_EM_10_XYZ_")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("text/plain")
                .body(containsString("0"));
        
    }
    
    
    @Test(timeout = 60000)
    public void test_14() throws Exception {
        
        given().accept("*/*")
                .header("x-EMextraHeader123", "")
                .get(baseUrlOfSut + "/api/title/male/mr?EMextraParam123=_EM_101_XYZ_")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("text/plain")
                .body(containsString("1"));
        
    }
    
    
    @Test(timeout = 60000)
    public void test_15() throws Exception {
        
        given().accept("*/*")
                .header("x-EMextraHeader123", "_EM_2530_XYZ_")
                .get(baseUrlOfSut + "/api/ordered4/QRVPb/MoVx42/_EM_2528_XYZ_/e1YAAO?EMextraParam123=_EM_2529_XYZ_")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("text/plain")
                .body(containsString("unordered"));
        
    }
    
    
    @Test(timeout = 60000)
    public void test_16() throws Exception {
        
        given().accept("*/*")
                .header("x-EMextraHeader123", "")
                .get(baseUrlOfSut + "/api/title/_EM_34_XYZ_/xBOqBsPIkw1m?EMextraParam123=_EM_35_XYZ_")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("text/plain")
                .body(containsString("-1"));
        
    }
    
    
    @Test(timeout = 60000)
    public void test_17() throws Exception {
        
        given().accept("*/*")
                .header("x-EMextraHeader123", "_EM_1372_XYZ_")
                .get(baseUrlOfSut + "/api/calc/sqrt/1.75218649203991E7/-8.988465674311579E307")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("text/plain")
                .body(containsString("4185.912674722097"));
        
    }
    
    
    @Test(timeout = 60000)
    public void test_18() throws Exception {
        
        given().accept("*/*")
                .header("x-EMextraHeader123", "")
                .get(baseUrlOfSut + "/api/cookie/userid/_EM_11_XYZ_/2bbr")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("text/plain")
                .body(containsString("0"));
        
    }
    
    
    @Test(timeout = 60000)
    public void test_19() throws Exception {
        
        given().accept("*/*")
                .header("x-EMextraHeader123", "")
                .get(baseUrlOfSut + "/api/title/female/mrs")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("text/plain")
                .body(containsString("0"));
        
    }
    
    
    @Test(timeout = 60000)
    public void test_20() throws Exception {
        
        given().accept("*/*")
                .header("x-EMextraHeader123", "_EM_102_XYZ_")
                .get(baseUrlOfSut + "/api/title/male/dr")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("text/plain")
                .body(containsString("1"));
        
    }
    
    
    @Test(timeout = 60000)
    public void test_21() throws Exception {
        
        given().accept("*/*")
                .header("x-EMextraHeader123", "")
                .get(baseUrlOfSut + "/api/cookie/userid/UseRbKbIG/jxjZNe%5Ef")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("text/plain")
                .body(containsString("1"));
        
    }
    
    
    @Test(timeout = 60000)
    public void test_22() throws Exception {
        
        given().accept("*/*")
                .header("x-EMextraHeader123", "")
                .get(baseUrlOfSut + "/api/cookie/session/_EM_503_XYZ_/_EM_1603_XYZ_?EMextraParam123=_EM_338_XYZ_")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("text/plain")
                .body(containsString("2"));
        
    }
    
    
    @Test(timeout = 60000)
    public void test_23() throws Exception {
        
        given().accept("*/*")
                .header("x-EMextraHeader123", "_EM_767_XYZ_")
                .get(baseUrlOfSut + "/api/notypevar/-12/oLDejG098FEq7Ph?EMextraParam123=_EM_766_XYZ_")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("text/plain")
                .body(containsString("2"));
        
    }
    
    
    @Test(timeout = 60000)
    public void test_24() throws Exception {
        
        given().accept("*/*")
                .header("x-EMextraHeader123", "_EM_45_XYZ_")
                .get(baseUrlOfSut + "/api/notypevar/28/_EM_10114_XYZ_")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("text/plain")
                .body(containsString("3"));
        
    }
    
    
    @Test(timeout = 60000)
    public void test_25() throws Exception {
        
        given().accept("*/*")
                .header("x-EMextraHeader123", "_EM_352_XYZ_")
                .get(baseUrlOfSut + "/api/notypevar/7/_EM_5013_XYZ_")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("text/plain")
                .body(containsString("3"));
        
    }
    
    
    @Test(timeout = 60000)
    public void test_26() throws Exception {
        
        given().accept("*/*")
                .header("x-EMextraHeader123", "_EM_8_XYZ_")
                .get(baseUrlOfSut + "/api/calc/log/1.0/0.0")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("text/plain")
                .body(containsString("0.0"));
        
    }
    
    
    @Test(timeout = 60000)
    public void test_27() throws Exception {
        
        given().accept("*/*")
                .header("x-EMextraHeader123", "_EM_102_XYZ_")
                .get(baseUrlOfSut + "/api/title/none/dr?EMextraParam123=_EM_101_XYZ_")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("text/plain")
                .body(containsString("2"));
        
    }
    
    
    @Test(timeout = 60000)
    public void test_28() throws Exception {
        
        given().accept("*/*")
                .header("x-EMextraHeader123", "_EM_2530_XYZ_")
                .get(baseUrlOfSut + "/api/ordered4/QRVNb/Qjfp4G/stkOR/ARVLb")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("text/plain")
                .body(containsString("unordered"));
        
    }
    
    
    @Test(timeout = 60000)
    public void test_29() throws Exception {
        
        given().accept("*/*")
                .header("x-EMextraHeader123", "")
                .get(baseUrlOfSut + "/api/cookie/session/am/l4TbqJqQR9")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("text/plain")
                .body(containsString("2"));
        
    }
    
    
    @Test(timeout = 60000)
    public void test_30() throws Exception {
        
        given().accept("*/*")
                .header("x-EMextraHeader123", "_EM_666_XYZ_")
                .get(baseUrlOfSut + "/api/title/female/miSs?EMextraParam123=_EM_665_XYZ_")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("text/plain")
                .body(containsString("0"));
        
    }
    
    
    @Test(timeout = 60000)
    public void test_31() throws Exception {
        
        given().accept("*/*")
                .header("x-EMextraHeader123", "")
                .get(baseUrlOfSut + "/api/title/male/sir")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("text/plain")
                .body(containsString("1"));
        
    }
    
    
    @Test(timeout = 60000)
    public void test_32() throws Exception {
        
        given().accept("*/*")
                .header("x-EMextraHeader123", "")
                .get(baseUrlOfSut + "/api/ordered4/QRVNb/Tijq4@/stiOR/UUUNrn?EMextraParam123=_EM_2529_XYZ_")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("text/plain")
                .body(containsString("increasing"));
        
    }
    
    
    @Test(timeout = 60000)
    public void test_33() throws Exception {
        
        given().accept("*/*")
                .header("x-EMextraHeader123", "")
                .get(baseUrlOfSut + "/api/ordered4/QRVNb/Ijfp4G/AZNNbK/AZNNbn?EMextraParam123=_EM_2529_XYZ_")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("text/plain")
                .body(containsString("decreasing"));
        
    }
    
    
    @Test(timeout = 60000)
    public void test_34() throws Exception {
        
        given().accept("*/*")
                .header("x-EMextraHeader123", "")
                .get(baseUrlOfSut + "/api/ordered4/QRVNb/MoVx4G/stiOR/ARVNb?EMextraParam123=_EM_2529_XYZ_")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("text/plain")
                .body(containsString("unordered"));
        
    }
    
    
    @Test(timeout = 60000)
    public void test_35() throws Exception {
        
        given().accept("*/*")
                .header("x-EMextraHeader123", "")
                .get(baseUrlOfSut + "/api/ordered4/QRVNb/Ijfp4G/stiOR/UUUNr?EMextraParam123=_EM_2529_XYZ_")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("text/plain")
                .body(containsString("unordered"));
        
    }
    
    
    @Test(timeout = 60000)
    public void test_36() throws Exception {
        
        given().accept("*/*")
                .header("x-EMextraHeader123", "")
                .get(baseUrlOfSut + "/api/calc/sine/0.753478006393/0.2807330290987?EMextraParam123=_EM_1371_XYZ_")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("text/plain")
                .body(containsString("0.6841794507292115"));
        
    }
    
    
    @Test(timeout = 60000)
    public void test_37() throws Exception {
        
        given().accept("*/*")
                .header("x-EMextraHeader123", "_EM_102_XYZ_")
                .get(baseUrlOfSut + "/api/title/none/rev?EMextraParam123=_EM_101_XYZ_")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("text/plain")
                .body(containsString("2"));
        
    }
    
    
    @Test(timeout = 60000)
    public void test_38() throws Exception {
        
        given().accept("*/*")
                .header("x-EMextraHeader123", "")
                .get(baseUrlOfSut + "/api/title/female/ms")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("text/plain")
                .body(containsString("0"));
        
    }
    
    
    @Test(timeout = 60000)
    public void test_39() throws Exception {
        
        given().accept("*/*")
                .header("x-EMextraHeader123", "_EM_102_XYZ_")
                .get(baseUrlOfSut + "/api/title/male/rev?EMextraParam123=_EM_101_XYZ_")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("text/plain")
                .body(containsString("1"));
        
    }
    
    
    @Test(timeout = 60000)
    public void test_40() throws Exception {
        
        given().accept("*/*")
                .header("x-EMextraHeader123", "")
                .get(baseUrlOfSut + "/api/text2txt/are/_EM_205_XYZ_/_EM_317_XYZ_?EMextraParam123=_EM_207_XYZ_")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("text/plain")
                .body(containsString("r"));
        
    }
    
    
    @Test(timeout = 60000)
    public void test_41() throws Exception {
        
        given().accept("*/*")
                .header("x-EMextraHeader123", "_EM_8_XYZ_")
                .get(baseUrlOfSut + "/api/calc/cosine/1.0/0.027736722543866985?EMextraParam123=_EM_7_XYZ_")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("text/plain")
                .body(containsString("0.5403023058681398"));
        
    }
    
    
    @Test(timeout = 60000)
    public void test_42() throws Exception {
        
        given().accept("*/*")
                .header("x-EMextraHeader123", "")
                .get(baseUrlOfSut + "/api/title/none/rthon?EMextraParam123=_EM_101_XYZ_")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("text/plain")
                .body(containsString("2"));
        
    }
    
    
    @Test(timeout = 60000)
    public void test_43() throws Exception {
        
        given().accept("*/*")
                .header("x-EMextraHeader123", "_EM_102_XYZ_")
                .get(baseUrlOfSut + "/api/title/male/rthon")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("text/plain")
                .body(containsString("1"));
        
    }
    
    
    @Test(timeout = 60000)
    public void test_44() throws Exception {
        
        given().accept("*/*")
                .header("x-EMextraHeader123", "")
                .get(baseUrlOfSut + "/api/title/female/dr")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("text/plain")
                .body(containsString("0"));
        
    }
    
    
    @Test(timeout = 60000)
    public void test_45() throws Exception {
        
        given().accept("*/*")
                .header("x-EMextraHeader123", "_EM_208_XYZ_")
                .get(baseUrlOfSut + "/api/text2txt/for/_EM_359_XYZ_/EoZqlHAUN")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("text/plain")
                .body(containsString("4"));
        
    }
    
    
    @Test(timeout = 60000)
    public void test_46() throws Exception {
        
        given().accept("*/*")
                .header("x-EMextraHeader123", "_EM_102_XYZ_")
                .get(baseUrlOfSut + "/api/title/none/_EM_1211_XYZ_")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("text/plain")
                .body(containsString("-1"));
        
    }
    
    
    @Test(timeout = 60000)
    public void test_47() throws Exception {
        
        given().accept("*/*")
                .header("x-EMextraHeader123", "")
                .get(baseUrlOfSut + "/api/title/male/ZwX48rWNLzT5?EMextraParam123=_EM_665_XYZ_")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("text/plain")
                .body(containsString("-1"));
        
    }
    
    
    @Test(timeout = 60000)
    public void test_48() throws Exception {
        
        given().accept("*/*")
                .header("x-EMextraHeader123", "_EM_5061_XYZ_")
                .get(baseUrlOfSut + "/api/calc/tangent/0.8036855992755214/0.5031086464400387")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("text/plain")
                .body(containsString("1.0372604231189653"));
        
    }
    
    
    @Test(timeout = 60000)
    public void test_49() throws Exception {
        
        given().accept("*/*")
                .header("x-EMextraHeader123", "")
                .get(baseUrlOfSut + "/api/title/none/prof?EMextraParam123=_EM_101_XYZ_")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("text/plain")
                .body(containsString("2"));
        
    }
    
    
    @Test(timeout = 60000)
    public void test_50() throws Exception {
        
        given().accept("*/*")
                .header("x-EMextraHeader123", "")
                .get(baseUrlOfSut + "/api/title/male/prof?EMextraParam123=_EM_101_XYZ_")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("text/plain")
                .body(containsString("1"));
        
    }
    
    
    @Test(timeout = 60000)
    public void test_51() throws Exception {
        
        given().accept("*/*")
                .header("x-EMextraHeader123", "")
                .get(baseUrlOfSut + "/api/title/female/laDy")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("text/plain")
                .body(containsString("0"));
        
    }
    
    
    @Test(timeout = 60000)
    public void test_52() throws Exception {
        
        given().accept("*/*")
                .header("x-EMextraHeader123", "")
                .get(baseUrlOfSut + "/api/text2txt/two/h2Bo9o9zp_2yNe/_EM_243_XYZ_")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("text/plain")
                .body(containsString("2"));
        
    }
    
    
    @Test(timeout = 60000)
    public void test_53() throws Exception {
        
        given().accept("*/*")
                .header("x-EMextraHeader123", "_EM_183_XYZ_")
                .get(baseUrlOfSut + "/api/text2txt/four/G95ddXEUjDoKb3v1/_EM_203_XYZ_?EMextraParam123=_EM_182_XYZ_")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("text/plain")
                .body(containsString("4"));
        
    }
    
    
    @Test(timeout = 60000)
    public void test_54() throws Exception {
        
        given().accept("*/*")
                .header("x-EMextraHeader123", "")
                .get(baseUrlOfSut + "/api/text2txt/you/h2Bo9o9zp_2yNe/_EM_243_XYZ_")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("text/plain")
                .body(containsString("u"));
        
    }
    
    
    @Test(timeout = 60000)
    public void test_55() throws Exception {
        
        given().accept("*/*")
                .header("x-EMextraHeader123", "")
                .get(baseUrlOfSut + "/api/text2txt/and/Q/_EM_11161_XYZ_?EMextraParam123=_EM_11162_XYZ_")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("text/plain")
                .body(containsString("n"));
        
    }
    
    
    @Test(timeout = 60000)
    public void test_56() throws Exception {
        
        given().accept("*/*")
                .header("x-EMextraHeader123", "_EM_17_XYZ_")
                .get(baseUrlOfSut + "/api/text2txt/see/you/_EM_1970_XYZ_?EMextraParam123=_EM_16_XYZ_")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("text/plain")
                .body(containsString("cu"));
        
    }
    
    
    @Test(timeout = 60000)
    public void test_57() throws Exception {
        
        given().accept("*/*")
                .header("x-EMextraHeader123", "")
                .get(baseUrlOfSut + "/api/calc/plus/0.753478006393/0.2807330290987")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("text/plain")
                .body(containsString("1.0342110354917"));
        
    }
    
    
    @Test(timeout = 60000)
    public void test_58() throws Exception {
        
        given().accept("*/*")
                .header("x-EMextraHeader123", "")
                .get(baseUrlOfSut + "/api/text2txt/see/h2Bo9o9zp_2yNe/_EM_243_XYZ_")
                .then()
                .statusCode(200)
                .assertThat()
                .body(isEmptyOrNullString());
        
    }
    
    
    @Test(timeout = 60000)
    public void test_59() throws Exception {
        
        given().accept("*/*")
                .header("x-EMextraHeader123", "")
                .get(baseUrlOfSut + "/api/text2txt/by/CuXgtxIJ6ax3/IfiokAZybXoHW_?EMextraParam123=_EM_207_XYZ_")
                .then()
                .statusCode(200)
                .assertThat()
                .body(isEmptyOrNullString());
        
    }
    
    
    @Test(timeout = 60000)
    public void test_60() throws Exception {
        
        given().accept("*/*")
                .header("x-EMextraHeader123", "")
                .get(baseUrlOfSut + "/api/title/female/rev")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("text/plain")
                .body(containsString("0"));
        
    }
    
    
    @Test(timeout = 60000)
    public void test_61() throws Exception {
        
        given().accept("*/*")
                .header("x-EMextraHeader123", "")
                .get(baseUrlOfSut + "/api/costfuns/-4/_EM_5426_XYZ_?EMextraParam123=42")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("text/plain")
                .body(containsString("10"));
        
    }
    
    
    @Test(timeout = 60000)
    public void test_62() throws Exception {
        
        given().accept("*/*")
                .header("x-EMextraHeader123", "_EM_555_XYZ_")
                .get(baseUrlOfSut + "/api/pat/sun15dec")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("text/plain")
                .body(containsString("date"));
        
    }
    
    
    @Test(timeout = 60000)
    public void test_63() throws Exception {
        
        given().accept("*/*")
                .header("x-EMextraHeader123", "_EM_10989_XYZ_")
                .get(baseUrlOfSut + "/api/calc/subtract/0.5978378774443798/0.5482198091866629?EMextraParam123=_EM_10988_XYZ_")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("text/plain")
                .body(containsString("0.04961806825771686"));
        
    }
    
    
    @Test(timeout = 60000)
    public void test_64() throws Exception {
        
        given().accept("*/*")
                .header("x-EMextraHeader123", "")
                .get(baseUrlOfSut + "/api/costfuns/5/4uiDAwj5hmDV")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("text/plain")
                .body(containsString("10"));
        
    }
    
    
    @Test(timeout = 60000)
    public void test_65() throws Exception {
        
        given().accept("*/*")
                .header("x-EMextraHeader123", "")
                .get(baseUrlOfSut + "/api/costfuns/-33554408/_EM_18_XYZ_?EMextraParam123=42")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("text/plain")
                .body(containsString("10"));
        
    }
    
    
    @Test(timeout = 60000)
    public void test_66() throws Exception {
        
        given().accept("*/*")
                .header("x-EMextraHeader123", "")
                .get(baseUrlOfSut + "/api/costfuns/706/_EM_240_XYZ_")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("text/plain")
                .body(containsString("10"));
        
    }
    
    
    @Test(timeout = 60000)
    public void test_67() throws Exception {
        
        given().accept("*/*")
                .header("x-EMextraHeader123", "")
                .get(baseUrlOfSut + "/api/text2txt/by/the/_EM_3247_XYZ_")
                .then()
                .statusCode(200)
                .assertThat()
                .body(isEmptyOrNullString());
        
    }
    
    
    @Test(timeout = 60000)
    public void test_68() throws Exception {
        
        given().accept("*/*")
                .header("x-EMextraHeader123", "_EM_208_XYZ_")
                .get(baseUrlOfSut + "/api/text2txt/by/the/way?EMextraParam123=_EM_207_XYZ_")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("text/plain")
                .body(containsString("btw"));
        
    }
    
    
    @Test(timeout = 60000)
    public void test_69() throws Exception {
        
        given().accept("*/*")
                .header("x-EMextraHeader123", "")
                .get(baseUrlOfSut + "/api/costfuns/318/baab?EMextraParam123=42")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("text/plain")
                .body(containsString("10"));
        
    }
    
    
    @Test(timeout = 60000)
    public void test_70() throws Exception {
        
        given().accept("*/*")
                .header("x-EMextraHeader123", "_EM_102_XYZ_")
                .get(baseUrlOfSut + "/api/title/female/rthon")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("text/plain")
                .body(containsString("0"));
        
    }
    
    
    @Test(timeout = 60000)
    public void test_71() throws Exception {
        
        given().accept("*/*")
                .header("x-EMextraHeader123", "_EM_29_XYZ_")
                .get(baseUrlOfSut + "/api/pat/_EM_27_XYZ_?EMextraParam123=_EM_28_XYZ_")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("text/plain")
                .body(containsString("none"));
        
    }
    
    
    @Test(timeout = 60000)
    public void test_72() throws Exception {
        
        given().accept("*/*")
                .header("x-EMextraHeader123", "")
                .get(baseUrlOfSut + "/api/pat/698.41e-26?EMextraParam123=_EM_2083_XYZ_")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("text/plain")
                .body(containsString("fpe"));
        
    }
    
    
    @Test(timeout = 60000)
    public void test_73() throws Exception {
        
        given().accept("*/*")
                .header("x-EMextraHeader123", "")
                .get(baseUrlOfSut + "/api/calc/multiply/-19.99318225832828/68.397113964118")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("text/plain")
                .body(containsString("-1367.4759654282616"));
        
    }
    
    
    @Test(timeout = 60000)
    public void test_74() throws Exception {
        
        given().accept("*/*")
                .header("x-EMextraHeader123", "_EM_666_XYZ_")
                .get(baseUrlOfSut + "/api/title/female/_EM_1517_XYZ_?EMextraParam123=_EM_665_XYZ_")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("text/plain")
                .body(containsString("-1"));
        
    }
    
    
    @Test(timeout = 60000)
    public void test_75() throws Exception {
        
        given().accept("*/*")
                .header("x-EMextraHeader123", "_EM_666_XYZ_")
                .get(baseUrlOfSut + "/api/title/female/prof?EMextraParam123=_EM_665_XYZ_")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("text/plain")
                .body(containsString("0"));
        
    }
    
    
    @Test(timeout = 60000)
    public void test_76() throws Exception {
        
        given().accept("*/*")
                .header("x-EMextraHeader123", "")
                .get(baseUrlOfSut + "/api/pat/2wzhCRRhzw2a/2wzh;NRij")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("text/plain")
                .body(containsString("0"));
        
    }
    
    
    @Test(timeout = 60000)
    public void test_77() throws Exception {
        
        given().accept("*/*")
                .header("x-EMextraHeader123", "")
                .get(baseUrlOfSut + "/api/calc/_EM_6_XYZ_/0.8634665660085522/0.12422659218630505?EMextraParam123=_EM_7_XYZ_")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("text/plain")
                .body(containsString("0.0"));
        
    }
    
    
    @Test(timeout = 60000)
    public void test_78() throws Exception {
        
        given().accept("*/*")
                .header("x-EMextraHeader123", "")
                .get(baseUrlOfSut + "/api/calc/divide/1.0/0.027736722543866985?EMextraParam123=_EM_7_XYZ_")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("text/plain")
                .body(containsString("36.05328633974151"));
        
    }
    
    
    @Test(timeout = 60000)
    public void test_79() throws Exception {
        
        given().accept("*/*")
                .header("x-EMextraHeader123", "_EM_75_XYZ_")
                .get(baseUrlOfSut + "/api/pat/iEqY@E:H1UXZh_TQ/hZX?EMextraParam123=42")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("text/plain")
                .body(containsString("2"));
        
    }
    
    
    @Test(timeout = 60000)
    public void test_80() throws Exception {
        
        given().accept("*/*")
                .header("x-EMextraHeader123", "")
                .get(baseUrlOfSut + "/api/pat/iK_%5EYEXP4DXZhhZX/hZX")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("text/plain")
                .body(containsString("10"));
        
    }
    
    
    @Test(timeout = 60000)
    public void test_81() throws Exception {
        
        given().accept("*/*")
                .header("x-EMextraHeader123", "")
                .get(baseUrlOfSut + "/api/pat/iE_%5D@E:H1DXZhhZQ/hZX")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("text/plain")
                .body(containsString("2"));
        
    }
    
    
    @Test(timeout = 60000)
    public void test_82() throws Exception {
        
        given().accept("*/*")
                .header("x-EMextraHeader123", "")
                .get(baseUrlOfSut + "/api/dateparse/mon/hyHAVXgaP0J")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("text/plain")
                .body(containsString("1"));
        
    }
    
    
    @Test(timeout = 60000)
    public void test_83() throws Exception {
        
        given().accept("*/*")
                .header("x-EMextraHeader123", "")
                .get(baseUrlOfSut + "/api/pat/2wzhCRRhjdCa/2wzh;RRij")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("text/plain")
                .body(containsString("1"));
        
    }
    
    
    @Test(timeout = 60000)
    public void test_84() throws Exception {
        
        given().accept("*/*")
                .header("x-EMextraHeader123", "")
                .get(baseUrlOfSut + "/api/dateparse/tue/_EM_667_XYZ_?EMextraParam123=42")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("text/plain")
                .body(containsString("1"));
        
    }
    
    
    @Test(timeout = 60000)
    public void test_85() throws Exception {
        
        given().accept("*/*")
                .header("x-EMextraHeader123", "")
                .get(baseUrlOfSut + "/api/dateparse/wed/_EM_290_XYZ_?EMextraParam123=42")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("text/plain")
                .body(containsString("1"));
        
    }
    
    
    @Test(timeout = 60000)
    public void test_86() throws Exception {
        
        given().accept("*/*")
                .header("x-EMextraHeader123", "")
                .get(baseUrlOfSut + "/api/dateparse/thur/_EM_768_XYZ_")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("text/plain")
                .body(containsString("1"));
        
    }
    
    
    @Test(timeout = 60000)
    public void test_87() throws Exception {
        
        given().accept("*/*")
                .header("x-EMextraHeader123", "")
                .get(baseUrlOfSut + "/api/dateparse/fri/sep?EMextraParam123=42")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("text/plain")
                .body(containsString("10"));
        
    }
    
    
    @Test(timeout = 60000)
    public void test_88() throws Exception {
        
        given().accept("*/*")
                .header("x-EMextraHeader123", "_EM_110_XYZ_")
                .get(baseUrlOfSut + "/api/dateparse/sat/aug")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("text/plain")
                .body(containsString("9"));
        
    }
    
    
    @Test(timeout = 60000)
    public void test_89() throws Exception {
        
        given().accept("*/*")
                .header("x-EMextraHeader123", "")
                .get(baseUrlOfSut + "/api/dateparse/sat/nov")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("text/plain")
                .body(containsString("12"));
        
    }
    
    
    @Test(timeout = 60000)
    public void test_90() throws Exception {
        
        given().accept("*/*")
                .header("x-EMextraHeader123", "_EM_266_XYZ_")
                .get(baseUrlOfSut + "/api/dateparse/sun/_EM_667_XYZ_")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("text/plain")
                .body(containsString("1"));
        
    }
    
    
    @Test(timeout = 60000)
    public void test_91() throws Exception {
        
        given().accept("*/*")
                .header("x-EMextraHeader123", "_EM_266_XYZ_")
                .get(baseUrlOfSut + "/api/dateparse/_EM_275_XYZ_/jan")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("text/plain")
                .body(containsString("1"));
        
    }
    
    
    @Test(timeout = 60000)
    public void test_92() throws Exception {
        
        given().accept("*/*")
                .header("x-EMextraHeader123", "_EM_266_XYZ_")
                .get(baseUrlOfSut + "/api/dateparse/_EM_264_XYZ_/feb?EMextraParam123=42")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("text/plain")
                .body(containsString("2"));
        
    }
    
    
    @Test(timeout = 60000)
    public void test_93() throws Exception {
        
        given().accept("*/*")
                .header("x-EMextraHeader123", "")
                .get(baseUrlOfSut + "/api/dateparse/_EM_839_XYZ_/mar?EMextraParam123=_EM_21_XYZ_")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("text/plain")
                .body(containsString("3"));
        
    }
    
    
    @Test(timeout = 60000)
    public void test_94() throws Exception {
        
        given().accept("*/*")
                .header("x-EMextraHeader123", "")
                .get(baseUrlOfSut + "/api/dateparse/taooMa9W/apr?EMextraParam123=_EM_564_XYZ_")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("text/plain")
                .body(containsString("4"));
        
    }
    
    
    @Test(timeout = 60000)
    public void test_95() throws Exception {
        
        given().accept("*/*")
                .header("x-EMextraHeader123", "")
                .get(baseUrlOfSut + "/api/dateparse/_EM_839_XYZ_/may?EMextraParam123=_EM_21_XYZ_")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("text/plain")
                .body(containsString("5"));
        
    }
    
    
    @Test(timeout = 60000)
    public void test_96() throws Exception {
        
        given().accept("*/*")
                .header("x-EMextraHeader123", "")
                .get(baseUrlOfSut + "/api/dateparse/_EM_655_XYZ_/jun?EMextraParam123=_EM_21_XYZ_")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("text/plain")
                .body(containsString("6"));
        
    }
    
    
    @Test(timeout = 60000)
    public void test_97() throws Exception {
        
        given().accept("*/*")
                .header("x-EMextraHeader123", "")
                .get(baseUrlOfSut + "/api/dateparse/_EM_655_XYZ_/jul?EMextraParam123=_EM_21_XYZ_")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("text/plain")
                .body(containsString("7"));
        
    }
    
    
    @Test(timeout = 60000)
    public void test_98() throws Exception {
        
        given().accept("*/*")
                .header("x-EMextraHeader123", "")
                .get(baseUrlOfSut + "/api/dateparse/d3/oct?EMextraParam123=42")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("text/plain")
                .body(containsString("10"));
        
    }
    
    
    @Test(timeout = 60000)
    public void test_99() throws Exception {
        
        given().accept("*/*")
                .header("x-EMextraHeader123", "_EM_22_XYZ_")
                .get(baseUrlOfSut + "/api/dateparse/95/dec?EMextraParam123=_EM_21_XYZ_")
                .then()
                .statusCode(200)
                .assertThat()
                .contentType("text/plain")
                .body(containsString("12"));
        
    }
    
    
    @Test(timeout = 60000)
    public void test_100() throws Exception {
        ExpectationHandler expectationHandler = expectationHandler();
        
        ValidatableResponse res_0 = given().accept("*/*")
                .header("x-EMextraHeader123", "_EM_2530_XYZ_")
                .get(baseUrlOfSut + "/api/ordered4/QRVNb/_EM_2907_XYZ_/_CNJ4ZG%5CxiCl/e1YAAW0")
                .then()
                .statusCode(400)
                .assertThat()
                .body(isEmptyOrNullString());
        
        expectationHandler.expect(ems)
            .that(sco, Arrays.asList(200, 401, 403, 404).contains(res_0.extract().statusCode()));
    }
    
    
    @Test(timeout = 60000)
    public void test_101() throws Exception {
        ExpectationHandler expectationHandler = expectationHandler();
        
        ValidatableResponse res_0 = given().accept("*/*")
                .header("x-EMextraHeader123", "")
                .get(baseUrlOfSut + "/api/pat/_EM_2265_XYZ_/6F%5Cqa")
                .then()
                .statusCode(400)
                .assertThat()
                .body(isEmptyOrNullString());
        
        expectationHandler.expect(ems)
            .that(sco, Arrays.asList(200, 401, 403, 404).contains(res_0.extract().statusCode()));
    }
    
    
    @Test(timeout = 60000)
    public void test_102() throws Exception {
        ExpectationHandler expectationHandler = expectationHandler();
        
        ValidatableResponse res_0 = given().accept("*/*")
                .header("x-EMextraHeader123", "")
                .get(baseUrlOfSut + "/api/notypevar/33/_E@U%5C3_hYZ_")
                .then()
                .statusCode(400)
                .assertThat()
                .body(isEmptyOrNullString());
        
        expectationHandler.expect(ems)
            .that(sco, Arrays.asList(200, 401, 403, 404).contains(res_0.extract().statusCode()));
    }
    
    
    @Test(timeout = 60000)
    public void test_103() throws Exception {
        ExpectationHandler expectationHandler = expectationHandler();
        
        ValidatableResponse res_0 = given().accept("*/*")
                .header("x-EMextraHeader123", "")
                .get(baseUrlOfSut + "/api/title/male/%5C?EMextraParam123=_EM_665_XYZ_")
                .then()
                .statusCode(400)
                .assertThat()
                .body(isEmptyOrNullString());
        
        expectationHandler.expect(ems)
            .that(sco, Arrays.asList(200, 401, 403, 404).contains(res_0.extract().statusCode()));
    }
    
    
    @Test(timeout = 60000)
    public void test_104() throws Exception {
        ExpectationHandler expectationHandler = expectationHandler();
        
        ValidatableResponse res_0 = given().accept("*/*")
                .header("x-EMextraHeader123", "")
                .get(baseUrlOfSut + "/api/cookie/userid/PyiunhvIA/_IMV524K%5CYZ%60")
                .then()
                .statusCode(400)
                .assertThat()
                .body(isEmptyOrNullString());
        
        expectationHandler.expect(ems)
            .that(sco, Arrays.asList(200, 401, 403, 404).contains(res_0.extract().statusCode()));
    }
    
    
    @Test(timeout = 60000)
    public void test_105() throws Exception {
        ExpectationHandler expectationHandler = expectationHandler();
        
        ValidatableResponse res_0 = given().accept("*/*")
                .header("x-EMextraHeader123", "")
                .get(baseUrlOfSut + "/api/dateparse/s7jZOVpBvkYGJ/Y99%5Cq?EMextraParam123=_EM_3557_XYZ_")
                .then()
                .statusCode(400)
                .assertThat()
                .body(isEmptyOrNullString());
        
        expectationHandler.expect(ems)
            .that(sco, Arrays.asList(200, 401, 403, 404).contains(res_0.extract().statusCode()));
    }
    
    
    @Test(timeout = 60000)
    public void test_106() throws Exception {
        ExpectationHandler expectationHandler = expectationHandler();
        
        ValidatableResponse res_0 = given().accept("*/*")
                .header("x-EMextraHeader123", "42")
                .get(baseUrlOfSut + "/api/filesuffix/GBJle%5CwIOeQA/jHp751L")
                .then()
                .statusCode(400)
                .assertThat()
                .body(isEmptyOrNullString());
        
        expectationHandler.expect(ems)
            .that(sco, Arrays.asList(200, 401, 403, 404).contains(res_0.extract().statusCode()));
    }
    
    
    @Test(timeout = 60000)
    public void test_107() throws Exception {
        ExpectationHandler expectationHandler = expectationHandler();
        
        ValidatableResponse res_0 = given().accept("*/*")
                .header("x-EMextraHeader123", "")
                .get(baseUrlOfSut + "/api/costfuns/666/%5C")
                .then()
                .statusCode(400)
                .assertThat()
                .body(isEmptyOrNullString());
        
        expectationHandler.expect(ems)
            .that(sco, Arrays.asList(200, 401, 403, 404).contains(res_0.extract().statusCode()));
    }
    
    
    @Test(timeout = 60000)
    public void test_108() throws Exception {
        ExpectationHandler expectationHandler = expectationHandler();
        
        ValidatableResponse res_0 = given().accept("*/*")
                .header("x-EMextraHeader123", "")
                .get(baseUrlOfSut + "/api/pat/pys%5CBhd2")
                .then()
                .statusCode(400)
                .assertThat()
                .body(isEmptyOrNullString());
        
        expectationHandler.expect(ems)
            .that(sco, Arrays.asList(200, 401, 403, 404).contains(res_0.extract().statusCode()));
    }
    
    
    @Test(timeout = 60000)
    public void test_109() throws Exception {
        ExpectationHandler expectationHandler = expectationHandler();
        
        ValidatableResponse res_0 = given().accept("*/*")
                .header("x-EMextraHeader123", "")
                .get(baseUrlOfSut + "/api/calc/Wqw%5CP/1793414.8465886412/0.147")
                .then()
                .statusCode(400)
                .assertThat()
                .body(isEmptyOrNullString());
        
        expectationHandler.expect(ems)
            .that(sco, Arrays.asList(200, 401, 403, 404).contains(res_0.extract().statusCode()));
    }
    
    
    @Test(timeout = 60000)
    public void test_110() throws Exception {
        ExpectationHandler expectationHandler = expectationHandler();
        
        ValidatableResponse res_0 = given().accept("*/*")
                .header("x-EMextraHeader123", "")
                .get(baseUrlOfSut + "/api/text2txt/_EM_96515_XYZ_/od2Ik%5CJhq/_EM_96644_XYZ_")
                .then()
                .statusCode(400)
                .assertThat()
                .body(isEmptyOrNullString());
        
        expectationHandler.expect(ems)
            .that(sco, Arrays.asList(200, 401, 403, 404).contains(res_0.extract().statusCode()));
    }
    
    
    @Test(timeout = 60000)
    public void test_111() throws Exception {
        
        given().accept("*/*")
                .header("x-EMextraHeader123", "")
                .get(baseUrlOfSut + "/api/pat/gopher//:la4/n?EMextraParam123=42")
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("application/json")
                .body("'status'", numberMatches(404.0))
                .body("'error'", containsString("Not Found"))
                .body("'message'", containsString("No message available"))
                .body("'path'", containsString("/api/pat/gopher//:la4/n"));
        
    }
    
    
    @Test(timeout = 60000)
    public void test_112() throws Exception {
        
        given().accept("*/*")
                .header("x-EMextraHeader123", "_EM_5594_XYZ_")
                .get(baseUrlOfSut + "/api/cookie/userid/EdNzE6S_V6%C2%85T/_EM_14906_XYZ_")
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("application/json")
                .body("'status'", numberMatches(404.0))
                .body("'error'", containsString("Not Found"))
                .body("'message'", containsString("No message available"))
                .body("'path'", containsString("/api/cookie/userid/EdNzE6S_V6%C2%85T/_EM_14906_XYZ_"));
        
    }
    
    
    @Test(timeout = 60000)
    public void test_113() throws Exception {
        
        given().accept("*/*")
                .header("x-EMextraHeader123", "")
                .get(baseUrlOfSut + "/api/calc/AV%C2%85CnYi/0.08516618655/1.010602708376762?EMextraParam123=_EM_6325_XYZ_")
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("application/json")
                .body("'status'", numberMatches(404.0))
                .body("'error'", containsString("Not Found"))
                .body("'message'", containsString("No message available"))
                .body("'path'", containsString("/api/calc/AV%C2%85CnYi/0.08516618655/1.010602708376762"));
        
    }
    
    
    @Test(timeout = 60000)
    public void test_114() throws Exception {
        
        given().accept("*/*")
                .header("x-EMextraHeader123", "_EM_666_XYZ_")
                .get(baseUrlOfSut + "/api/title/male/n%C2%85R")
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("application/json")
                .body("'status'", numberMatches(404.0))
                .body("'error'", containsString("Not Found"))
                .body("'message'", containsString("No message available"))
                .body("'path'", containsString("/api/title/male/n%C2%85R"));
        
    }
    
    
    @Test(timeout = 60000)
    public void test_115() throws Exception {
        
        given().accept("*/*")
                .header("x-EMextraHeader123", "")
                .get(baseUrlOfSut + "/api/text2txt/;/_EM_96868_XYZ_/_EM_10647_XYZ_")
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("application/json")
                .body("'status'", numberMatches(404.0))
                .body("'error'", containsString("Not Found"))
                .body("'message'", containsString("No message available"))
                .body("'path'", containsString("/api/text2txt/;/_EM_96868_XYZ_/_EM_10647_XYZ_"));
        
    }
    
    
    @Test(timeout = 60000)
    public void test_116() throws Exception {
        
        given().accept("*/*")
                .header("x-EMextraHeader123", "")
                .get(baseUrlOfSut + "/api/dateparse/;L/_EM_4915_XYZ_")
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("application/json")
                .body("'status'", numberMatches(404.0))
                .body("'error'", containsString("Not Found"))
                .body("'message'", containsString("No message available"))
                .body("'path'", containsString("/api/dateparse/;L/_EM_4915_XYZ_"));
        
    }
    
    
    @Test(timeout = 60000)
    public void test_117() throws Exception {
        
        given().accept("*/*")
                .header("x-EMextraHeader123", "")
                .get(baseUrlOfSut + "/api/ordered4/_EM_8499_XYZ_/_EM_8500_XYZ_/_EM_103160_XYZ_/;IYdcR9s")
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("application/json")
                .body("'status'", numberMatches(404.0))
                .body("'error'", containsString("Not Found"))
                .body("'message'", containsString("No message available"))
                .body("'path'", containsString("/api/ordered4/_EM_8499_XYZ_/_EM_8500_XYZ_/_EM_103160_XYZ_/;IYdcR9s"));
        
    }
    
    
    @Test(timeout = 60000)
    public void test_118() throws Exception {
        
        given().accept("*/*")
                .header("x-EMextraHeader123", "")
                .get(baseUrlOfSut + "/api/filesuffix/ufjdldz17pG3lIOw/;7")
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("application/json")
                .body("'status'", numberMatches(404.0))
                .body("'error'", containsString("Not Found"))
                .body("'message'", containsString("No message available"))
                .body("'path'", containsString("/api/filesuffix/ufjdldz17pG3lIOw/;7"));
        
    }
    
    
    @Test(timeout = 60000)
    public void test_119() throws Exception {
        
        given().accept("*/*")
                .header("x-EMextraHeader123", "")
                .get(baseUrlOfSut + "/api/costfuns/680/;")
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("application/json")
                .body("'status'", numberMatches(404.0))
                .body("'error'", containsString("Not Found"))
                .body("'message'", containsString("No message available"))
                .body("'path'", containsString("/api/costfuns/680/;"));
        
    }
    
    
    @Test(timeout = 60000)
    public void test_120() throws Exception {
        
        given().accept("*/*")
                .header("x-EMextraHeader123", "")
                .get(baseUrlOfSut + "/api/pat/;S9/http//:k6/q")
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("application/json")
                .body("'status'", numberMatches(404.0))
                .body("'error'", containsString("Not Found"))
                .body("'message'", containsString("No message available"))
                .body("'path'", containsString("/api/pat/;S9/http//:k6/q"));
        
    }
    
    
    @Test(timeout = 60000)
    public void test_121() throws Exception {
        
        given().accept("*/*")
                .header("x-EMextraHeader123", "")
                .get(baseUrlOfSut + "/api/notypevar/990/;d")
                .then()
                .statusCode(404)
                .assertThat()
                .contentType("application/json")
                .body("'status'", numberMatches(404.0))
                .body("'error'", containsString("Not Found"))
                .body("'message'", containsString("No message available"))
                .body("'path'", containsString("/api/notypevar/990/;d"));
        
    }


}
