Correct the test code delimited by ***** according to the error messages delimited by ##### and generate another complete code in JUnit 5 format. The response must contain only Java code in JUnit 5 format.

Keep these five instructions for this generated test code:

Instruction 1: Keet this package line to generated test code file:
package market;

Instruction 2: Keep the following Java imports to generated test code file:
import  org.junit.jupiter.api.AfterAll;
import  org.junit.jupiter.api.BeforeAll;
import  org.junit.jupiter.api.BeforeEach;
import  org.junit.jupiter.api.Test;
import  org.junit.jupiter.api.Timeout;
import static org.junit.jupiter.api.Assertions.*;
import  java.util.Map;
import  java.util.List;
import static org.evomaster.client.java.controller.api.EMTestUtils.*;
import  org.evomaster.client.java.controller.SutHandler;
import  io.restassured.RestAssured;
import static io.restassured.RestAssured.given;
import  io.restassured.response.ValidatableResponse;
import static org.evomaster.client.java.sql.dsl.SqlDsl.sql;
import  org.evomaster.client.java.controller.api.dto.database.operations.InsertionResultsDto;
import  org.evomaster.client.java.controller.api.dto.database.operations.InsertionDto;
import static org.hamcrest.Matchers.*;
import  io.restassured.config.JsonConfig;
import  io.restassured.path.json.config.JsonPathConfig;
import static io.restassured.config.RedirectConfig.redirectConfig;
import static org.evomaster.client.java.controller.contentMatchers.NumberMatcher.*;
import static org.evomaster.client.java.controller.contentMatchers.StringMatcher.*;
import static org.evomaster.client.java.controller.contentMatchers.SubStringMatcher.*;
import static org.evomaster.client.java.controller.expect.ExpectationHandler.expectationHandler;
import  org.evomaster.client.java.controller.expect.ExpectationHandler;
import  io.restassured.path.json.JsonPath;
import  java.util.Arrays;

Instruction 3: Keep the class name in this point (between the imports at instruction 2 and instruction 4)

Instruction 4: Keep these variables in the generated test code:
private static final SutHandler controller = new em.embedded.market.EmbeddedEvoMasterController();
private static String baseUrlOfSut;

Instruction 5: Keep the following setup and teardown methods in generated test code file:
@BeforeAll
public static void initClass() {
    controller.setupForGeneratedTest();
    baseUrlOfSut = controller.startSut();
    controller.registerOrExecuteInitSqlCommandsIfNeeded();
    assertNotNull(baseUrlOfSut);
    RestAssured.enableLoggingOfRequestAndResponseIfValidationFails();
    RestAssured.useRelaxedHTTPSValidation();
    RestAssured.urlEncodingEnabled = false;
    RestAssured.config = RestAssured.config()
        .jsonConfig(JsonConfig.jsonConfig().numberReturnType(JsonPathConfig.NumberReturnType.DOUBLE))
        .redirect(redirectConfig().followRedirects(false));
}


@AfterAll
public static void tearDown() {
    controller.stopSut();
}


@BeforeEach
public void initTest() {
    controller.resetDatabase(Arrays.asList("USER_ROLE","CUSTOMER_ORDER","CART_ITEM","PRODUCT","CART","CONTACTS"));
    controller.resetStateOfSUT();
}

*****

package market;

import org.junit.jupiter.api.AfterAll;
import org.junit.jupiter.api.BeforeAll;
import org.junit.jupiter.api.BeforeEach;
import org.junit.jupiter.api.Test;
import org.junit.jupiter.api.Timeout;
import static org.junit.jupiter.api.Assertions.*;
import java.util.Map;
import java.util.List;
import static org.evomaster.client.java.controller.api.EMTestUtils.*;
import org.evomaster.client.java.controller.SutHandler;
import io.restassured.RestAssured;
import static io.restassured.RestAssured.given;
import io.restassured.response.ValidatableResponse;
import static org.evomaster.client.java.sql.dsl.SqlDsl.sql;
import org.evomaster.client.java.controller.api.dto.database.operations.InsertionResultsDto;
import org.evomaster.client.java.controller.api.dto.database.operations.InsertionDto;
import static org.hamcrest.Matchers.*;
import io.restassured.config.JsonConfig;
import io.restassured.path.json.config.JsonPathConfig;
import static io.restassured.config.RedirectConfig.redirectConfig;
import static org.evomaster.client.java.controller.contentMatchers.NumberMatcher.*;
import static org.evomaster.client.java.controller.contentMatchers.StringMatcher.*;
import static org.evomaster.client.java.controller.contentMatchers.SubStringMatcher.*;
import static org.evomaster.client.java.controller.expect.ExpectationHandler.expectationHandler;
import org.evomaster.client.java.controller.expect.ExpectationHandler;
import io.restassured.path.json.JsonPath;
import java.util.Arrays;

public class run01_RestExceptionHandlerTest {

    private static final SutHandler controller = new em.embedded.market.EmbeddedEvoMasterController();
    private static String baseUrlOfSut;

    @BeforeAll
    public static void initClass() {
        controller.setupForGeneratedTest();
        baseUrlOfSut = controller.startSut();
        controller.registerOrExecuteInitSqlCommandsIfNeeded();
        assertNotNull(baseUrlOfSut);
        RestAssured.enableLoggingOfRequestAndResponseIfValidationFails();
        RestAssured.useRelaxedHTTPSValidation();
        RestAssured.urlEncodingEnabled = false;
        RestAssured.config = RestAssured.config()
            .jsonConfig(JsonConfig.jsonConfig().numberReturnType(JsonPathConfig.NumberReturnType.DOUBLE))
            .redirect(redirectConfig().followRedirects(false));
    }

    @AfterAll
    public static void tearDown() {
        controller.stopSut();
    }

    @BeforeEach
    public void initTest() {
        controller.resetDatabase(Arrays.asList("USER_ROLE", "CUSTOMER_ORDER", "CART_ITEM", "PRODUCT", "CART", "CONTACTS"));
        controller.resetStateOfSUT();
    }

    @Test
    public void testGetCustomer() {
        given().queryParam("name", "Ivan Petrov")
               .when().get(baseUrlOfSut + "/customer")
               .then().statusCode(200);
    }

    @Test
    public void testGetCustomerUnauthorized() {
        given().queryParam("name", "Unknown User")
               .when().get(baseUrlOfSut + "/customer")
               .then().statusCode(401);
    }

    @Test
    public void testGetCustomerNotFound() {
        given().queryParam("name", "Nonexistent User")
               .when().get(baseUrlOfSut + "/customer")
               .then().statusCode(404);
    }

    @Test
    public void testAddItemToCart() {
        given().contentType("application/json")
               .body("{\"productId\":1, \"quantity\":2}")
               .when().put(baseUrlOfSut + "/customer/cart")
               .then().statusCode(200);
    }

    @Test
    public void testAddItemToCartUnauthorized() {
        given().contentType("application/json")
               .body("{\"productId\":1, \"quantity\":2}")
               .when().put(baseUrlOfSut + "/customer/cart")
               .then().statusCode(401);
    }

    @Test
    public void testAddItemToCartNotFound() {
        given().contentType("application/json")
               .body("{\"productId\":999, \"quantity\":2}")
               .when().put(baseUrlOfSut + "/customer/cart")
               .then().statusCode(404);
    }

    @Test
    public void testClearCart() {
        given().when().delete(baseUrlOfSut + "/customer/cart")
               .then().statusCode(200);
    }

    @Test
    public void testClearCartUnauthorized() {
        given().when().delete(baseUrlOfSut + "/customer/cart")
               .then().statusCode(401);
    }

    @Test
    public void testClearCartNotFound() {
        given().when().delete(baseUrlOfSut + "/customer/cart")
               .then().statusCode(404);
    }

    @Test
    public void testSetDelivery() {
        given().queryParam("included", true)
               .when().put(baseUrlOfSut + "/customer/cart/delivery")
               .then().statusCode(200);
    }

    @Test
    public void testSetDeliveryUnauthorized() {
        given().queryParam("included", true)
               .when().put(baseUrlOfSut + "/customer/cart/delivery")
               .then().statusCode(401);
    }

    @Test
    public void testSetDeliveryNotFound() {
        given().queryParam("included", true)
               .when().put(baseUrlOfSut + "/customer/cart/delivery")
               .then().statusCode(404);
    }

    @Test
    public void testPayByCard() {
        given().contentType("application/json")
               .body("{\"ccNumber\":\"1234-5678-9876-5432\"}")
               .when().post(baseUrlOfSut + "/customer/cart/pay")
               .then().statusCode(201);
    }

    @Test
    public void testPayByCardUnauthorized() {
        given().contentType("application/json")
               .body("{\"ccNumber\":\"1234-5678-9876-5432\"}")
               .when().post(baseUrlOfSut + "/customer/cart/pay")
               .then().statusCode(401);
    }

    @Test
    public void testPayByCardNotFound() {
        given().contentType("application/json")
               .body("{\"ccNumber\":\"1234-5678-9876-5432\"}")
               .when().post(baseUrlOfSut + "/customer/cart/pay")
               .then().statusCode(404);
    }

    @Test
    public void testGetContacts() {
        given().queryParam("name", "Ivan Petrov")
               .when().get(baseUrlOfSut + "/customer/contacts")
               .then().statusCode(200);
    }

    @Test
    public void testUpdateContacts() {
        given().contentType("application/json")
               .body("{\"address\":\"New Address\", \"phone\":\"+7 987 654 32 10\"}")
               .when().put(baseUrlOfSut + "/customer/contacts")
               .then().statusCode(200);
    }

    @Test
    public void testUpdateContactsUnauthorized() {
        given().contentType("application/json")
               .body("{\"address\":\"New Address\", \"phone\":\"+7 987 654 32 10\"}")
               .when().put(baseUrlOfSut + "/customer/contacts")
               .then().statusCode(401);
    }

    @Test
    public void testUpdateContactsNotFound() {
        given().contentType("application/json")
               .body("{\"address\":\"New Address\", \"phone\":\"+7 987 654 32 10\"}")
               .when().put(baseUrlOfSut + "/customer/contacts")
               .then().statusCode(404);
    }

    @Test
    public void testGetOrders() {
        given().queryParam("name", "Ivan Petrov")
               .when().get(baseUrlOfSut + "/customer/orders")
               .then().statusCode(200);
    }

    @Test
    public void testGetOrder() {
        given().queryParam("name", "Ivan Petrov")
               .pathParam("orderId", 1)
               .when().get(baseUrlOfSut + "/customer/orders/{orderId}")
               .then().statusCode(200);
    }

    @Test
    public void testGetOrderUnauthorized() {
        given().queryParam("name", "Ivan Petrov")
               .pathParam("orderId", 1)
               .when().get(baseUrlOfSut + "/customer/orders/{orderId}")
               .then().statusCode(401);
    }

    @Test
    public void testGetOrderNotFound() {
        given().queryParam("name", "Ivan Petrov")
               .pathParam("orderId", 999)
               .when().get(baseUrlOfSut + "/customer/orders/{orderId}")
               .then().statusCode(404);
    }

    @Test
    public void testGetProducts() {
        given().when().get(baseUrlOfSut + "/products")
               .then().statusCode(200);
    }

    @Test
    public void testGetProduct() {
        given().pathParam("productId", 1)
               .when().get(baseUrlOfSut + "/products/{productId}")
               .then().statusCode(200);
    }

    @Test
    public void testGetProductUnauthorized() {
        given().pathParam("productId", 1)
               .when().get(baseUrlOfSut + "/products/{productId}")
               .then().statusCode(401);
    }

    @Test
    public void testGetProductNotFound() {
        given().pathParam("productId", 999)
               .when().get(baseUrlOfSut + "/products/{productId}")
               .then().statusCode(404);
    }

    @Test
    public void testCreateCustomer() {
        given().contentType("application/json")
               .body("{\"email\":\"ivan.petrov@yandex.ru\",\"password\":\"petrov\",\"name\":\"Ivan Petrov\",\"phone\":\"+7 123 456 78 90\",\"address\":\"Riesstrasse 18\"}")
               .when().post(baseUrlOfSut + "/register")
               .then().statusCode(201);
    }

    @Test
    public void testCreateCustomerUnauthorized() {
        given().contentType("application/json")
               .body("{\"email\":\"ivan.petrov@yandex.ru\",\"password\":\"petrov\",\"name\":\"Ivan Petrov\",\"phone\":\"+7 123 456 78 90\",\"address\":\"Riesstrasse 18\"}")
               .when().post(baseUrlOfSut + "/register")
               .then().statusCode(401);
    }

    @Test
    public void testCreateCustomerNotFound() {
        given().contentType("application/json")
               .body("{\"email\":\"ivan.petrov@yandex.ru\",\"password\":\"petrov\",\"name\":\"Ivan Petrov\",\"phone\":\"+7 123 456 78 90\",\"address\":\"Riesstrasse 18\"}")
               .when().post(baseUrlOfSut + "/register")
               .then().statusCode(404);
    }
}

*****
#####
[[1;34mINFO[m] Scanning for projects...
[[1;34mINFO[m] 
[[1;34mINFO[m] [1m---------------------< [0;36mnet.lukyanets:market-rest[0;1m >----------------------[m
[[1;34mINFO[m] [1mBuilding market-rest 0.1.2[m
[[1;34mINFO[m] [1m--------------------------------[ jar ]---------------------------------[m
[[1;33mWARNING[m] The POM for com.sun.xml.bind:jaxb-osgi:jar:2.2.10 is invalid, transitive dependencies (if any) will not be available, enable debug logging for more details
[[1;34mINFO[m] 
[[1;34mINFO[m] [1m--- [0;32mmaven-clean-plugin:2.5:clean[m [1m(default-clean)[m @ [36mmarket-rest[0;1m ---[m
[[1;34mINFO[m] Deleting /media/rincon/63999417195/eclipse-workspace/EMB-master/jdk_11_maven/cs/rest-gui/market/market-rest/target
[[1;34mINFO[m] 
[[1;34mINFO[m] [1m--- [0;32mjacoco-maven-plugin:0.8.7:prepare-agent[m [1m(default)[m @ [36mmarket-rest[0;1m ---[m
[[1;34mINFO[m] argLine set to -javaagent:/home/rincon/.m2/repository/org/jacoco/org.jacoco.agent/0.8.7/org.jacoco.agent-0.8.7-runtime.jar=destfile=/media/rincon/63999417195/eclipse-workspace/EMB-master/jdk_11_maven/cs/rest-gui/market/market-rest/target/jacoco.exec
[[1;34mINFO[m] 
[[1;34mINFO[m] [1m--- [0;32mspring-boot-maven-plugin:2.4.3:build-info[m [1m(default)[m @ [36mmarket-rest[0;1m ---[m
[[1;34mINFO[m] 
[[1;34mINFO[m] [1m--- [0;32mmaven-resources-plugin:2.6:resources[m [1m(default-resources)[m @ [36mmarket-rest[0;1m ---[m
[[1;34mINFO[m] Using 'UTF-8' encoding to copy filtered resources.
[[1;34mINFO[m] Copying 3 resources
[[1;34mINFO[m] 
[[1;34mINFO[m] [1m--- [0;32mmaven-compiler-plugin:3.8.0:compile[m [1m(default-compile)[m @ [36mmarket-rest[0;1m ---[m
[[1;34mINFO[m] Changes detected - recompiling the module!
[[1;34mINFO[m] Compiling 11 source files to /media/rincon/63999417195/eclipse-workspace/EMB-master/jdk_11_maven/cs/rest-gui/market/market-rest/target/classes
[[1;34mINFO[m] 
[[1;34mINFO[m] [1m--- [0;32mjacoco-maven-plugin:0.8.7:prepare-agent[m [1m(default)[m @ [36mmarket-rest[0;1m ---[m
[[1;34mINFO[m] argLine set to -javaagent:/home/rincon/.m2/repository/org/jacoco/org.jacoco.agent/0.8.7/org.jacoco.agent-0.8.7-runtime.jar=destfile=/media/rincon/63999417195/eclipse-workspace/EMB-master/jdk_11_maven/cs/rest-gui/market/market-rest/target/jacoco.exec
[[1;34mINFO[m] 
[[1;34mINFO[m] [1m--- [0;32mspring-boot-maven-plugin:2.4.3:build-info[m [1m(default)[m @ [36mmarket-rest[0;1m ---[m
[[1;34mINFO[m] 
[[1;34mINFO[m] [1m--- [0;32mmaven-resources-plugin:2.6:resources[m [1m(default-resources)[m @ [36mmarket-rest[0;1m ---[m
[[1;34mINFO[m] Using 'UTF-8' encoding to copy filtered resources.
[[1;34mINFO[m] Copying 3 resources
[[1;34mINFO[m] 
[[1;34mINFO[m] [1m--- [0;32mmaven-compiler-plugin:3.8.0:compile[m [1m(default-compile)[m @ [36mmarket-rest[0;1m ---[m
[[1;34mINFO[m] Nothing to compile - all classes are up to date
[[1;34mINFO[m] 
[[1;34mINFO[m] [1m--- [0;32mmaven-resources-plugin:2.6:testResources[m [1m(default-testResources)[m @ [36mmarket-rest[0;1m ---[m
[[1;34mINFO[m] Using 'UTF-8' encoding to copy filtered resources.
[[1;34mINFO[m] skip non existing resourceDirectory /media/rincon/63999417195/eclipse-workspace/EMB-master/jdk_11_maven/cs/rest-gui/market/market-rest/src/test/resources
[[1;34mINFO[m] 
[[1;34mINFO[m] [1m--- [0;32mmaven-compiler-plugin:3.8.0:testCompile[m [1m(default-testCompile)[m @ [36mmarket-rest[0;1m ---[m
[[1;34mINFO[m] Changes detected - recompiling the module!
[[1;34mINFO[m] Compiling 1 source file to /media/rincon/63999417195/eclipse-workspace/EMB-master/jdk_11_maven/cs/rest-gui/market/market-rest/target/test-classes
[[1;34mINFO[m] 
[[1;34mINFO[m] [1m--- [0;32mjacoco-maven-plugin:0.8.7:prepare-agent[m [1m(default)[m @ [36mmarket-rest[0;1m ---[m
[[1;34mINFO[m] argLine set to -javaagent:/home/rincon/.m2/repository/org/jacoco/org.jacoco.agent/0.8.7/org.jacoco.agent-0.8.7-runtime.jar=destfile=/media/rincon/63999417195/eclipse-workspace/EMB-master/jdk_11_maven/cs/rest-gui/market/market-rest/target/jacoco.exec
[[1;34mINFO[m] 
[[1;34mINFO[m] [1m--- [0;32mspring-boot-maven-plugin:2.4.3:build-info[m [1m(default)[m @ [36mmarket-rest[0;1m ---[m
[[1;34mINFO[m] 
[[1;34mINFO[m] [1m--- [0;32mmaven-resources-plugin:2.6:resources[m [1m(default-resources)[m @ [36mmarket-rest[0;1m ---[m
[[1;34mINFO[m] Using 'UTF-8' encoding to copy filtered resources.
[[1;34mINFO[m] Copying 3 resources
[[1;34mINFO[m] 
[[1;34mINFO[m] [1m--- [0;32mmaven-compiler-plugin:3.8.0:compile[m [1m(default-compile)[m @ [36mmarket-rest[0;1m ---[m
[[1;34mINFO[m] Nothing to compile - all classes are up to date
[[1;34mINFO[m] 
[[1;34mINFO[m] [1m--- [0;32mmaven-resources-plugin:2.6:testResources[m [1m(default-testResources)[m @ [36mmarket-rest[0;1m ---[m
[[1;34mINFO[m] Using 'UTF-8' encoding to copy filtered resources.
[[1;34mINFO[m] skip non existing resourceDirectory /media/rincon/63999417195/eclipse-workspace/EMB-master/jdk_11_maven/cs/rest-gui/market/market-rest/src/test/resources
[[1;34mINFO[m] 
[[1;34mINFO[m] [1m--- [0;32mmaven-compiler-plugin:3.8.0:testCompile[m [1m(default-testCompile)[m @ [36mmarket-rest[0;1m ---[m
[[1;34mINFO[m] Nothing to compile - all classes are up to date
[[1;34mINFO[m] 
[[1;34mINFO[m] [1m--- [0;32mmaven-surefire-plugin:2.22.0:test[m [1m(default-test)[m @ [36mmarket-rest[0;1m ---[m
[[1;34mINFO[m] 
[[1;34mINFO[m] -------------------------------------------------------
[[1;34mINFO[m]  T E S T S
[[1;34mINFO[m] -------------------------------------------------------
[[1;34mINFO[m] Running market.[1mrun01_RestExceptionHandlerTest[m

  .   ____          _            __ _ _
 /\\ / ___'_ __ _ _(_)_ __  __ _ \ \ \ \
( ( )\___ | '_ | '_| | '_ \/ _` | \ \ \ \
 \\/  ___)| |_)| | | | | || (_| |  ) ) ) )
  '  |____| .__|_| |_|_| |_\__, | / / / /
 =========|_|==============|___/=/_/_/_/
 :: Spring Boot ::                (v2.4.3)

2024-08-29 15:48:28,350 INFO  [background-preinit] o.h.v.i.u.Version - HV000001: Hibernate Validator 6.1.7.Final
2024-08-29 15:48:28,422 INFO  [main] o.a.m.s.b.ForkedBooter - Starting ForkedBooter v2.22.0 using Java 11.0.20 on IFTO-PROBOOK with PID 11050 (started by rincon in /media/rincon/63999417195/eclipse-workspace/EMB-master/jdk_11_maven/cs/rest-gui/market/market-rest)
2024-08-29 15:48:28,430 INFO  [main] o.a.m.s.b.ForkedBooter - No active profile set, falling back to default profiles: default
2024-08-29 15:48:29,167 WARN  [main] o.s.b.c.c.ConfigDataEnvironment - Property 'spring.profiles' imported from location 'class path resource [application.yml]' is invalid and should be replaced with 'spring.config.activate.on-profile' [origin: class path resource [application.yml] - 34:13]
2024-08-29 15:48:29,167 WARN  [main] o.s.b.c.c.ConfigDataEnvironment - Property 'spring.profiles' imported from location 'class path resource [application.yml]' is invalid and should be replaced with 'spring.config.activate.on-profile' [origin: class path resource [application.yml] - 24:13]
2024-08-29 15:48:30,691 INFO  [main] o.s.d.r.c.RepositoryConfigurationDelegate - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
2024-08-29 15:48:30,824 INFO  [main] o.s.d.r.c.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 121 ms. Found 8 JPA repository interfaces.
2024-08-29 15:48:31,354 INFO  [main] o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'market.DataConfig' of type [market.DataConfig$$EnhancerBySpringCGLIB$$59b0eb97] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2024-08-29 15:48:31,532 INFO  [main] o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.security.access.expression.method.DefaultMethodSecurityExpressionHandler@2d1a4bf' of type [org.springframework.security.access.expression.method.DefaultMethodSecurityExpressionHandler] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2024-08-29 15:48:31,542 INFO  [main] o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'methodSecurityMetadataSource' of type [org.springframework.security.access.method.DelegatingMethodSecurityMetadataSource] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2024-08-29 15:48:32,040 INFO  [main] o.s.b.w.e.t.TomcatWebServer - Tomcat initialized with port(s): 0 (http)
2024-08-29 15:48:32,062 INFO  [main] o.a.c.h.Http11NioProtocol - Initializing ProtocolHandler ["http-nio-auto-1"]
2024-08-29 15:48:32,063 INFO  [main] o.a.c.c.StandardService - Starting service [Tomcat]
2024-08-29 15:48:32,064 INFO  [main] o.a.c.c.StandardEngine - Starting Servlet engine: [Apache Tomcat/9.0.43]
2024-08-29 15:48:32,225 INFO  [main] o.a.c.c.C.[.[.[/] - Initializing Spring embedded WebApplicationContext
2024-08-29 15:48:32,225 INFO  [main] o.s.b.w.s.c.ServletWebServerApplicationContext - Root WebApplicationContext: initialization completed in 3054 ms
2024-08-29 15:48:32,438 INFO  [main] c.z.h.HikariDataSource - HikariPool-1 - Starting...
2024-08-29 15:48:32,876 INFO  [main] c.z.h.HikariDataSource - HikariPool-1 - Start completed.
2024-08-29 15:48:33,147 INFO  [main] o.h.j.i.u.LogHelper - HHH000204: Processing PersistenceUnitInfo [name: default]
2024-08-29 15:48:33,246 INFO  [main] o.h.Version - HHH000412: Hibernate ORM core version 5.4.28.Final
2024-08-29 15:48:33,470 INFO  [main] o.h.a.c.Version - HCANN000001: Hibernate Commons Annotations {5.1.2.Final}
2024-08-29 15:48:33,849 INFO  [main] o.h.d.Dialect - HHH000400: Using dialect: org.hibernate.dialect.H2Dialect
2024-08-29 15:48:34,159 WARN  [main] o.h.b.i.InFlightMetadataCollectorImpl - HHH000069: Duplicate generator name gen
2024-08-29 15:48:34,162 WARN  [main] o.h.b.i.InFlightMetadataCollectorImpl - HHH000069: Duplicate generator name gen
2024-08-29 15:48:34,985 INFO  [main] o.h.e.t.j.p.i.JtaPlatformInitiator - HHH000490: Using JtaPlatform implementation: [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
2024-08-29 15:48:34,998 INFO  [main] o.s.o.j.LocalContainerEntityManagerFactoryBean - Initialized JPA EntityManagerFactory for persistence unit 'default'
2024-08-29 15:48:36,110 WARN  [main] o.s.b.a.o.j.JpaBaseConfiguration$JpaWebConfiguration - spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
2024-08-29 15:48:37,125 INFO  [main] o.s.s.w.DefaultSecurityFilterChain - Will secure any request with [org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter@609fdb66, org.springframework.security.web.context.SecurityContextPersistenceFilter@3defaf6b, org.springframework.security.web.header.HeaderWriterFilter@6a5d1b5, org.springframework.security.web.authentication.logout.LogoutFilter@7c598b0b, org.springframework.security.web.authentication.www.BasicAuthenticationFilter@135de375, org.springframework.security.web.savedrequest.RequestCacheAwareFilter@60c9d0a3, org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter@c000109, org.springframework.security.web.authentication.AnonymousAuthenticationFilter@72b6faeb, org.springframework.security.web.session.SessionManagementFilter@2672702a, org.springframework.security.web.access.ExceptionTranslationFilter@339e56eb, org.springframework.security.web.access.intercept.FilterSecurityInterceptor@7f35fb32]
2024-08-29 15:48:37,270 INFO  [main] o.s.s.c.ThreadPoolTaskExecutor - Initializing ExecutorService 'applicationTaskExecutor'
2024-08-29 15:48:37,738 INFO  [main] o.a.c.h.Http11NioProtocol - Starting ProtocolHandler ["http-nio-auto-1"]
2024-08-29 15:48:37,769 INFO  [main] o.s.b.w.e.t.TomcatWebServer - Tomcat started on port(s): 34227 (http) with context path ''
2024-08-29 15:48:38,316 INFO  [main] o.a.m.s.b.ForkedBooter - Started ForkedBooter in 10.861 seconds (JVM running for 13.231)
2024-08-29 15:48:40,116 INFO  [http-nio-auto-1-exec-1] o.a.c.c.C.[.[.[/] - Initializing Spring DispatcherServlet 'dispatcherServlet'
2024-08-29 15:48:40,116 INFO  [http-nio-auto-1-exec-1] o.s.w.s.DispatcherServlet - Initializing Servlet 'dispatcherServlet'
2024-08-29 15:48:40,118 INFO  [http-nio-auto-1-exec-1] o.s.w.s.DispatcherServlet - Completed initialization in 2 ms
2024-08-29 15:48:40,197 WARN  [http-nio-auto-1-exec-1] m.r.e.RestExceptionHandler - RestErrorResponse{message='Acesso negado', entityName='null', description='uri=/customer/cart/delivery', fieldErrors=[]}
Request method:	PUT
Request URI:	http://localhost:34227/customer/cart/delivery?included=true
Proxy:			<none>
Request params:	<none>
Query params:	included=true
Form params:	<none>
Path params:	<none>
Headers:		Accept=*/*
Cookies:		<none>
Multiparts:		<none>
Body:			<none>

HTTP/1.1 401 
X-Content-Type-Options: nosniff
X-XSS-Protection: 1; mode=block
Cache-Control: no-cache, no-store, max-age=0, must-revalidate
Pragma: no-cache
Expires: 0
Content-Type: application/json
Transfer-Encoding: chunked
Date: Thu, 29 Aug 2024 18:48:40 GMT
Keep-Alive: timeout=60
Connection: keep-alive

{
    "message": "Acesso negado",
    "description": "uri=/customer/cart/delivery",
    "entityName": null,
    "fieldErrors": [
        
    ]
}
2024-08-29 15:48:40,696 WARN  [http-nio-auto-1-exec-2] m.r.e.RestExceptionHandler - RestErrorResponse{message='Acesso negado', entityName='null', description='uri=/customer/contacts', fieldErrors=[]}
Request method:	PUT
Request URI:	http://localhost:34227/customer/contacts
Proxy:			<none>
Request params:	<none>
Query params:	<none>
Form params:	<none>
Path params:	<none>
Headers:		Accept=*/*
				Content-Type=application/json; charset=UTF-8
Cookies:		<none>
Multiparts:		<none>
Body:
{
    "address": "New Address",
    "phone": "+7 987 654 32 10"
}

HTTP/1.1 401 
X-Content-Type-Options: nosniff
X-XSS-Protection: 1; mode=block
Cache-Control: no-cache, no-store, max-age=0, must-revalidate
Pragma: no-cache
Expires: 0
Content-Type: application/json
Transfer-Encoding: chunked
Date: Thu, 29 Aug 2024 18:48:40 GMT
Keep-Alive: timeout=60
Connection: keep-alive

{
    "message": "Acesso negado",
    "description": "uri=/customer/contacts",
    "entityName": null,
    "fieldErrors": [
        
    ]
}
2024-08-29 15:48:41,031 WARN  [http-nio-auto-1-exec-3] m.r.e.RestExceptionHandler - RestErrorResponse{message='Argument validation error', entityName='UserAccount', description='uri=/register', fieldErrors=[{field='email', message='Account with this email already exists'}]}
Request method:	POST
Request URI:	http://localhost:34227/register
Proxy:			<none>
Request params:	<none>
Query params:	<none>
Form params:	<none>
Path params:	<none>
Headers:		Accept=*/*
				Content-Type=application/json; charset=UTF-8
Cookies:		<none>
Multiparts:		<none>
Body:
{
    "email": "ivan.petrov@yandex.ru",
    "password": "petrov",
    "name": "Ivan Petrov",
    "phone": "+7 123 456 78 90",
    "address": "Riesstrasse 18"
}

HTTP/1.1 406 
X-Content-Type-Options: nosniff
X-XSS-Protection: 1; mode=block
Cache-Control: no-cache, no-store, max-age=0, must-revalidate
Pragma: no-cache
Expires: 0
Content-Type: application/json
Transfer-Encoding: chunked
Date: Thu, 29 Aug 2024 18:48:40 GMT
Keep-Alive: timeout=60
Connection: keep-alive

{
    "message": "Argument validation error",
    "description": "uri=/register",
    "entityName": "UserAccount",
    "fieldErrors": [
        {
            "field": "email",
            "message": "Account with this email already exists"
        }
    ]
}
Request method:	GET
Request URI:	http://localhost:34227/products/1
Proxy:			<none>
Request params:	<none>
Query params:	<none>
Form params:	<none>
Path params:	productId=1
Headers:		Accept=*/*
Cookies:		<none>
Multiparts:		<none>
Body:			<none>

HTTP/1.1 200 
X-Content-Type-Options: nosniff
X-XSS-Protection: 1; mode=block
Cache-Control: no-cache, no-store, max-age=0, must-revalidate
Pragma: no-cache
Expires: 0
Content-Type: application/hal+json
Transfer-Encoding: chunked
Date: Thu, 29 Aug 2024 18:48:40 GMT
Keep-Alive: timeout=60
Connection: keep-alive

{
    "productId": 1,
    "distillery": "Ardbeg",
    "name": "Ten",
    "price": 4420.0,
    "age": 10,
    "volume": 700,
    "alcohol": 46.0,
    "description": "Ten Years Old is the basis of the Ardbeg range. After 10 years of maturation in ex-bourbon casks, the whiskey bottled at 46% ABV without cold filtering. The characteristic peat, although clearly present but in perfect balance with the natural sweetness and not predominant in the taste.",
    "available": false,
    "_links": {
        "All products": {
            "href": "http://localhost:34227/products"
        }
    }
}
2024-08-29 15:48:41,304 WARN  [http-nio-auto-1-exec-7] m.r.e.RestExceptionHandler - RestErrorResponse{message='Acesso negado', entityName='null', description='uri=/customer/cart/delivery', fieldErrors=[]}
2024-08-29 15:48:41,365 WARN  [http-nio-auto-1-exec-8] m.r.e.RestExceptionHandler - RestErrorResponse{message='Acesso negado', entityName='null', description='uri=/customer/cart', fieldErrors=[]}
2024-08-29 15:48:41,404 WARN  [http-nio-auto-1-exec-9] m.r.e.RestExceptionHandler - RestErrorResponse{message='Acesso negado', entityName='null', description='uri=/customer/contacts', fieldErrors=[]}
Request method:	PUT
Request URI:	http://localhost:34227/customer/contacts
Proxy:			<none>
Request params:	<none>
Query params:	<none>
Form params:	<none>
Path params:	<none>
Headers:		Accept=*/*
				Content-Type=application/json; charset=UTF-8
Cookies:		<none>
Multiparts:		<none>
Body:
{
    "address": "New Address",
    "phone": "+7 987 654 32 10"
}

HTTP/1.1 401 
X-Content-Type-Options: nosniff
X-XSS-Protection: 1; mode=block
Cache-Control: no-cache, no-store, max-age=0, must-revalidate
Pragma: no-cache
Expires: 0
Content-Type: application/json
Transfer-Encoding: chunked
Date: Thu, 29 Aug 2024 18:48:41 GMT
Keep-Alive: timeout=60
Connection: keep-alive

{
    "message": "Acesso negado",
    "description": "uri=/customer/contacts",
    "entityName": null,
    "fieldErrors": [
        
    ]
}
2024-08-29 15:48:41,435 WARN  [http-nio-auto-1-exec-10] m.r.e.RestExceptionHandler - RestErrorResponse{message='Acesso negado', entityName='null', description='uri=/customer/cart', fieldErrors=[]}
Request method:	PUT
Request URI:	http://localhost:34227/customer/cart
Proxy:			<none>
Request params:	<none>
Query params:	<none>
Form params:	<none>
Path params:	<none>
Headers:		Accept=*/*
				Content-Type=application/json; charset=UTF-8
Cookies:		<none>
Multiparts:		<none>
Body:
{
    "productId": 999,
    "quantity": 2
}

HTTP/1.1 401 
X-Content-Type-Options: nosniff
X-XSS-Protection: 1; mode=block
Cache-Control: no-cache, no-store, max-age=0, must-revalidate
Pragma: no-cache
Expires: 0
Content-Type: application/json
Transfer-Encoding: chunked
Date: Thu, 29 Aug 2024 18:48:41 GMT
Keep-Alive: timeout=60
Connection: keep-alive

{
    "message": "Acesso negado",
    "description": "uri=/customer/cart",
    "entityName": null,
    "fieldErrors": [
        
    ]
}
2024-08-29 15:48:41,467 WARN  [http-nio-auto-1-exec-1] m.r.e.RestExceptionHandler - RestErrorResponse{message='Acesso negado', entityName='null', description='uri=/customer/cart', fieldErrors=[]}
Request method:	DELETE
Request URI:	http://localhost:34227/customer/cart
Proxy:			<none>
Request params:	<none>
Query params:	<none>
Form params:	<none>
Path params:	<none>
Headers:		Accept=*/*
Cookies:		<none>
Multiparts:		<none>
Body:			<none>

HTTP/1.1 401 
X-Content-Type-Options: nosniff
X-XSS-Protection: 1; mode=block
Cache-Control: no-cache, no-store, max-age=0, must-revalidate
Pragma: no-cache
Expires: 0
Content-Type: application/json
Transfer-Encoding: chunked
Date: Thu, 29 Aug 2024 18:48:41 GMT
Keep-Alive: timeout=60
Connection: keep-alive

{
    "message": "Acesso negado",
    "description": "uri=/customer/cart",
    "entityName": null,
    "fieldErrors": [
        
    ]
}
2024-08-29 15:48:41,529 WARN  [http-nio-auto-1-exec-2] m.r.e.RestExceptionHandler - RestErrorResponse{message='Argument validation error', entityName='creditCardDTO', description='uri=/customer/cart/pay', fieldErrors=[{field='ccNumber', message='Not a valid credit card number'}]}
Request method:	POST
Request URI:	http://localhost:34227/customer/cart/pay
Proxy:			<none>
Request params:	<none>
Query params:	<none>
Form params:	<none>
Path params:	<none>
Headers:		Accept=*/*
				Content-Type=application/json; charset=UTF-8
Cookies:		<none>
Multiparts:		<none>
Body:
{
    "ccNumber": "1234-5678-9876-5432"
}

HTTP/1.1 406 
X-Content-Type-Options: nosniff
X-XSS-Protection: 1; mode=block
Cache-Control: no-cache, no-store, max-age=0, must-revalidate
Pragma: no-cache
Expires: 0
Content-Type: application/json
Transfer-Encoding: chunked
Date: Thu, 29 Aug 2024 18:48:41 GMT
Keep-Alive: timeout=60
Connection: keep-alive

{
    "message": "Argument validation error",
    "description": "uri=/customer/cart/pay",
    "entityName": "creditCardDTO",
    "fieldErrors": [
        {
            "field": "ccNumber",
            "message": "Not a valid credit card number"
        }
    ]
}
2024-08-29 15:48:41,557 WARN  [http-nio-auto-1-exec-4] m.r.e.RestExceptionHandler - RestErrorResponse{message='Acesso negado', entityName='null', description='uri=/customer/cart', fieldErrors=[]}
Request method:	DELETE
Request URI:	http://localhost:34227/customer/cart
Proxy:			<none>
Request params:	<none>
Query params:	<none>
Form params:	<none>
Path params:	<none>
Headers:		Accept=*/*
Cookies:		<none>
Multiparts:		<none>
Body:			<none>

HTTP/1.1 401 
X-Content-Type-Options: nosniff
X-XSS-Protection: 1; mode=block
Cache-Control: no-cache, no-store, max-age=0, must-revalidate
Pragma: no-cache
Expires: 0
Content-Type: application/json
Transfer-Encoding: chunked
Date: Thu, 29 Aug 2024 18:48:41 GMT
Keep-Alive: timeout=60
Connection: keep-alive

{
    "message": "Acesso negado",
    "description": "uri=/customer/cart",
    "entityName": null,
    "fieldErrors": [
        
    ]
}
2024-08-29 15:48:41,586 WARN  [http-nio-auto-1-exec-5] m.r.e.RestExceptionHandler - RestErrorResponse{message='Requested entity doesn't exist', entityName='ProductDTO', description='uri=/products/999', fieldErrors=[{field='id', message='No instance with this id'}]}
2024-08-29 15:48:41,625 WARN  [http-nio-auto-1-exec-3] m.r.e.RestExceptionHandler - RestErrorResponse{message='Acesso negado', entityName='null', description='uri=/customer/cart', fieldErrors=[]}
Request method:	PUT
Request URI:	http://localhost:34227/customer/cart
Proxy:			<none>
Request params:	<none>
Query params:	<none>
Form params:	<none>
Path params:	<none>
Headers:		Accept=*/*
				Content-Type=application/json; charset=UTF-8
Cookies:		<none>
Multiparts:		<none>
Body:
{
    "productId": 1,
    "quantity": 2
}

HTTP/1.1 401 
X-Content-Type-Options: nosniff
X-XSS-Protection: 1; mode=block
Cache-Control: no-cache, no-store, max-age=0, must-revalidate
Pragma: no-cache
Expires: 0
Content-Type: application/json
Transfer-Encoding: chunked
Date: Thu, 29 Aug 2024 18:48:41 GMT
Keep-Alive: timeout=60
Connection: keep-alive

{
    "message": "Acesso negado",
    "description": "uri=/customer/cart",
    "entityName": null,
    "fieldErrors": [
        
    ]
}
2024-08-29 15:48:41,662 WARN  [http-nio-auto-1-exec-6] m.r.e.RestExceptionHandler - RestErrorResponse{message='Argument validation error', entityName='UserAccount', description='uri=/register', fieldErrors=[{field='email', message='Account with this email already exists'}]}
Request method:	POST
Request URI:	http://localhost:34227/register
Proxy:			<none>
Request params:	<none>
Query params:	<none>
Form params:	<none>
Path params:	<none>
Headers:		Accept=*/*
				Content-Type=application/json; charset=UTF-8
Cookies:		<none>
Multiparts:		<none>
Body:
{
    "email": "ivan.petrov@yandex.ru",
    "password": "petrov",
    "name": "Ivan Petrov",
    "phone": "+7 123 456 78 90",
    "address": "Riesstrasse 18"
}

HTTP/1.1 406 
X-Content-Type-Options: nosniff
X-XSS-Protection: 1; mode=block
Cache-Control: no-cache, no-store, max-age=0, must-revalidate
Pragma: no-cache
Expires: 0
Content-Type: application/json
Transfer-Encoding: chunked
Date: Thu, 29 Aug 2024 18:48:41 GMT
Keep-Alive: timeout=60
Connection: keep-alive

{
    "message": "Argument validation error",
    "description": "uri=/register",
    "entityName": "UserAccount",
    "fieldErrors": [
        {
            "field": "email",
            "message": "Account with this email already exists"
        }
    ]
}
2024-08-29 15:48:41,740 WARN  [http-nio-auto-1-exec-8] m.r.e.RestExceptionHandler - RestErrorResponse{message='Argument validation error', entityName='UserAccount', description='uri=/register', fieldErrors=[{field='email', message='Account with this email already exists'}]}
Request method:	POST
Request URI:	http://localhost:34227/register
Proxy:			<none>
Request params:	<none>
Query params:	<none>
Form params:	<none>
Path params:	<none>
Headers:		Accept=*/*
				Content-Type=application/json; charset=UTF-8
Cookies:		<none>
Multiparts:		<none>
Body:
{
    "email": "ivan.petrov@yandex.ru",
    "password": "petrov",
    "name": "Ivan Petrov",
    "phone": "+7 123 456 78 90",
    "address": "Riesstrasse 18"
}

HTTP/1.1 406 
X-Content-Type-Options: nosniff
X-XSS-Protection: 1; mode=block
Cache-Control: no-cache, no-store, max-age=0, must-revalidate
Pragma: no-cache
Expires: 0
Content-Type: application/json
Transfer-Encoding: chunked
Date: Thu, 29 Aug 2024 18:48:41 GMT
Keep-Alive: timeout=60
Connection: keep-alive

{
    "message": "Argument validation error",
    "description": "uri=/register",
    "entityName": "UserAccount",
    "fieldErrors": [
        {
            "field": "email",
            "message": "Account with this email already exists"
        }
    ]
}
2024-08-29 15:48:41,766 WARN  [http-nio-auto-1-exec-9] m.r.e.RestExceptionHandler - RestErrorResponse{message='Acesso negado', entityName='null', description='uri=/customer/cart', fieldErrors=[]}
2024-08-29 15:48:41,871 WARN  [http-nio-auto-1-exec-1] m.r.e.RestExceptionHandler - RestErrorResponse{message='Acesso negado', entityName='null', description='uri=/customer/cart/delivery', fieldErrors=[]}
Request method:	PUT
Request URI:	http://localhost:34227/customer/cart/delivery?included=true
Proxy:			<none>
Request params:	<none>
Query params:	included=true
Form params:	<none>
Path params:	<none>
Headers:		Accept=*/*
Cookies:		<none>
Multiparts:		<none>
Body:			<none>

HTTP/1.1 401 
X-Content-Type-Options: nosniff
X-XSS-Protection: 1; mode=block
Cache-Control: no-cache, no-store, max-age=0, must-revalidate
Pragma: no-cache
Expires: 0
Content-Type: application/json
Transfer-Encoding: chunked
Date: Thu, 29 Aug 2024 18:48:41 GMT
Keep-Alive: timeout=60
Connection: keep-alive

{
    "message": "Acesso negado",
    "description": "uri=/customer/cart/delivery",
    "entityName": null,
    "fieldErrors": [
        
    ]
}
2024-08-29 15:48:41,893 WARN  [http-nio-auto-1-exec-2] m.r.e.RestExceptionHandler - RestErrorResponse{message='Argument validation error', entityName='creditCardDTO', description='uri=/customer/cart/pay', fieldErrors=[{field='ccNumber', message='Not a valid credit card number'}]}
Request method:	POST
Request URI:	http://localhost:34227/customer/cart/pay
Proxy:			<none>
Request params:	<none>
Query params:	<none>
Form params:	<none>
Path params:	<none>
Headers:		Accept=*/*
				Content-Type=application/json; charset=UTF-8
Cookies:		<none>
Multiparts:		<none>
Body:
{
    "ccNumber": "1234-5678-9876-5432"
}

HTTP/1.1 406 
X-Content-Type-Options: nosniff
X-XSS-Protection: 1; mode=block
Cache-Control: no-cache, no-store, max-age=0, must-revalidate
Pragma: no-cache
Expires: 0
Content-Type: application/json
Transfer-Encoding: chunked
Date: Thu, 29 Aug 2024 18:48:41 GMT
Keep-Alive: timeout=60
Connection: keep-alive

{
    "message": "Argument validation error",
    "description": "uri=/customer/cart/pay",
    "entityName": "creditCardDTO",
    "fieldErrors": [
        {
            "field": "ccNumber",
            "message": "Not a valid credit card number"
        }
    ]
}
2024-08-29 15:48:41,947 WARN  [http-nio-auto-1-exec-4] m.r.e.RestExceptionHandler - RestErrorResponse{message='Argument validation error', entityName='creditCardDTO', description='uri=/customer/cart/pay', fieldErrors=[{field='ccNumber', message='Not a valid credit card number'}]}
Request method:	POST
Request URI:	http://localhost:34227/customer/cart/pay
Proxy:			<none>
Request params:	<none>
Query params:	<none>
Form params:	<none>
Path params:	<none>
Headers:		Accept=*/*
				Content-Type=application/json; charset=UTF-8
Cookies:		<none>
Multiparts:		<none>
Body:
{
    "ccNumber": "1234-5678-9876-5432"
}

HTTP/1.1 406 
X-Content-Type-Options: nosniff
X-XSS-Protection: 1; mode=block
Cache-Control: no-cache, no-store, max-age=0, must-revalidate
Pragma: no-cache
Expires: 0
Content-Type: application/json
Transfer-Encoding: chunked
Date: Thu, 29 Aug 2024 18:48:41 GMT
Keep-Alive: timeout=60
Connection: keep-alive

{
    "message": "Argument validation error",
    "description": "uri=/customer/cart/pay",
    "entityName": "creditCardDTO",
    "fieldErrors": [
        {
            "field": "ccNumber",
            "message": "Not a valid credit card number"
        }
    ]
}
2024-08-29 15:48:41,971 WARN  [http-nio-auto-1-exec-5] m.r.e.RestExceptionHandler - RestErrorResponse{message='Acesso negado', entityName='null', description='uri=/customer/contacts', fieldErrors=[]}
2024-08-29 15:48:41,995 INFO  [main] o.a.c.h.Http11NioProtocol - Pausing ProtocolHandler ["http-nio-auto-1"]
2024-08-29 15:48:41,995 INFO  [main] o.a.c.c.StandardService - Stopping service [Tomcat]
2024-08-29 15:48:41,997 INFO  [main] o.a.c.c.C.[.[.[/] - Destroying Spring FrameworkServlet 'dispatcherServlet'
2024-08-29 15:48:42,000 INFO  [main] o.a.c.h.Http11NioProtocol - Stopping ProtocolHandler ["http-nio-auto-1"]
2024-08-29 15:48:42,005 INFO  [main] o.a.c.h.Http11NioProtocol - Destroying ProtocolHandler ["http-nio-auto-1"]
[[1;31mERROR[m] [1;31mTests [0;1mrun: [0;1m30[m, [1;31mFailures: [0;1;31m15[m, [1;31mErrors: [0;1;31m8[m, Skipped: 0, Time elapsed: 15.765 s[1;31m <<< FAILURE![m - in market.[1mrun01_RestExceptionHandlerTest[m
[[1;31mERROR[m] testSetDelivery  Time elapsed: 1.325 s  <<< FAILURE!
java.lang.AssertionError: 
1 expectation failed.
Expected status code <200> but was <401>.

	at market.run01_RestExceptionHandlerTest.testSetDelivery(run01_RestExceptionHandlerTest.java:129)

[[1;31mERROR[m] testUpdateContactsNotFound  Time elapsed: 0.241 s  <<< FAILURE!
java.lang.AssertionError: 
1 expectation failed.
Expected status code <404> but was <401>.

	at market.run01_RestExceptionHandlerTest.testUpdateContactsNotFound(run01_RestExceptionHandlerTest.java:198)

[[1;31mERROR[m] testGetCustomerNotFound  Time elapsed: 0.018 s  <<< ERROR!
java.lang.IllegalArgumentException: Illegal character in query at index 26: /customer?name=Nonexistent User
	at market.run01_RestExceptionHandlerTest.testGetCustomerNotFound(run01_RestExceptionHandlerTest.java:79)
Caused by: java.net.URISyntaxException: Illegal character in query at index 26: /customer?name=Nonexistent User
	at market.run01_RestExceptionHandlerTest.testGetCustomerNotFound(run01_RestExceptionHandlerTest.java:79)

[[1;31mERROR[m] testCreateCustomerUnauthorized  Time elapsed: 0.308 s  <<< FAILURE!
java.lang.AssertionError: 
1 expectation failed.
Expected status code <401> but was <406>.

	at market.run01_RestExceptionHandlerTest.testCreateCustomerUnauthorized(run01_RestExceptionHandlerTest.java:272)

[[1;31mERROR[m] testGetProductUnauthorized  Time elapsed: 0.182 s  <<< FAILURE!
java.lang.AssertionError: 
1 expectation failed.
Expected status code <401> but was <200>.

	at market.run01_RestExceptionHandlerTest.testGetProductUnauthorized(run01_RestExceptionHandlerTest.java:249)

[[1;31mERROR[m] testGetOrder  Time elapsed: 0.02 s  <<< ERROR!
java.lang.IllegalArgumentException: Illegal character in query at index 28: /customer/orders/1?name=Ivan Petrov
	at market.run01_RestExceptionHandlerTest.testGetOrder(run01_RestExceptionHandlerTest.java:212)
Caused by: java.net.URISyntaxException: Illegal character in query at index 28: /customer/orders/1?name=Ivan Petrov
	at market.run01_RestExceptionHandlerTest.testGetOrder(run01_RestExceptionHandlerTest.java:212)

[[1;31mERROR[m] testGetCustomerUnauthorized  Time elapsed: 0.019 s  <<< ERROR!
java.lang.IllegalArgumentException: Illegal character in query at index 22: /customer?name=Unknown User
	at market.run01_RestExceptionHandlerTest.testGetCustomerUnauthorized(run01_RestExceptionHandlerTest.java:72)
Caused by: java.net.URISyntaxException: Illegal character in query at index 22: /customer?name=Unknown User
	at market.run01_RestExceptionHandlerTest.testGetCustomerUnauthorized(run01_RestExceptionHandlerTest.java:72)

[[1;31mERROR[m] testUpdateContacts  Time elapsed: 0.039 s  <<< FAILURE!
java.lang.AssertionError: 
1 expectation failed.
Expected status code <200> but was <401>.

	at market.run01_RestExceptionHandlerTest.testUpdateContacts(run01_RestExceptionHandlerTest.java:182)

[[1;31mERROR[m] testAddItemToCartNotFound  Time elapsed: 0.034 s  <<< FAILURE!
java.lang.AssertionError: 
1 expectation failed.
Expected status code <404> but was <401>.

	at market.run01_RestExceptionHandlerTest.testAddItemToCartNotFound(run01_RestExceptionHandlerTest.java:104)

[[1;31mERROR[m] testClearCartNotFound  Time elapsed: 0.03 s  <<< FAILURE!
java.lang.AssertionError: 
1 expectation failed.
Expected status code <404> but was <401>.

	at market.run01_RestExceptionHandlerTest.testClearCartNotFound(run01_RestExceptionHandlerTest.java:122)

[[1;31mERROR[m] testPayByCard  Time elapsed: 0.062 s  <<< FAILURE!
java.lang.AssertionError: 
1 expectation failed.
Expected status code <201> but was <406>.

	at market.run01_RestExceptionHandlerTest.testPayByCard(run01_RestExceptionHandlerTest.java:151)

[[1;31mERROR[m] testClearCart  Time elapsed: 0.027 s  <<< FAILURE!
java.lang.AssertionError: 
1 expectation failed.
Expected status code <200> but was <401>.

	at market.run01_RestExceptionHandlerTest.testClearCart(run01_RestExceptionHandlerTest.java:110)

[[1;31mERROR[m] testAddItemToCart  Time elapsed: 0.04 s  <<< FAILURE!
java.lang.AssertionError: 
1 expectation failed.
Expected status code <200> but was <401>.

	at market.run01_RestExceptionHandlerTest.testAddItemToCart(run01_RestExceptionHandlerTest.java:88)

[[1;31mERROR[m] testCreateCustomerNotFound  Time elapsed: 0.039 s  <<< FAILURE!
java.lang.AssertionError: 
1 expectation failed.
Expected status code <404> but was <406>.

	at market.run01_RestExceptionHandlerTest.testCreateCustomerNotFound(run01_RestExceptionHandlerTest.java:280)

[[1;31mERROR[m] testGetOrderUnauthorized  Time elapsed: 0.011 s  <<< ERROR!
java.lang.IllegalArgumentException: Illegal character in query at index 28: /customer/orders/1?name=Ivan Petrov
	at market.run01_RestExceptionHandlerTest.testGetOrderUnauthorized(run01_RestExceptionHandlerTest.java:220)
Caused by: java.net.URISyntaxException: Illegal character in query at index 28: /customer/orders/1?name=Ivan Petrov
	at market.run01_RestExceptionHandlerTest.testGetOrderUnauthorized(run01_RestExceptionHandlerTest.java:220)

[[1;31mERROR[m] testCreateCustomer  Time elapsed: 0.04 s  <<< FAILURE!
java.lang.AssertionError: 
1 expectation failed.
Expected status code <201> but was <406>.

	at market.run01_RestExceptionHandlerTest.testCreateCustomer(run01_RestExceptionHandlerTest.java:264)

[[1;31mERROR[m] testSetDeliveryNotFound  Time elapsed: 0.024 s  <<< FAILURE!
java.lang.AssertionError: 
1 expectation failed.
Expected status code <404> but was <401>.

	at market.run01_RestExceptionHandlerTest.testSetDeliveryNotFound(run01_RestExceptionHandlerTest.java:143)

[[1;31mERROR[m] testPayByCardNotFound  Time elapsed: 0.022 s  <<< FAILURE!
java.lang.AssertionError: 
1 expectation failed.
Expected status code <404> but was <406>.

	at market.run01_RestExceptionHandlerTest.testPayByCardNotFound(run01_RestExceptionHandlerTest.java:167)

[[1;31mERROR[m] testGetContacts  Time elapsed: 0.008 s  <<< ERROR!
java.lang.IllegalArgumentException: Illegal character in query at index 28: /customer/contacts?name=Ivan Petrov
	at market.run01_RestExceptionHandlerTest.testGetContacts(run01_RestExceptionHandlerTest.java:173)
Caused by: java.net.URISyntaxException: Illegal character in query at index 28: /customer/contacts?name=Ivan Petrov
	at market.run01_RestExceptionHandlerTest.testGetContacts(run01_RestExceptionHandlerTest.java:173)

[[1;31mERROR[m] testGetOrderNotFound  Time elapsed: 0.008 s  <<< ERROR!
java.lang.IllegalArgumentException: Illegal character in query at index 30: /customer/orders/999?name=Ivan Petrov
	at market.run01_RestExceptionHandlerTest.testGetOrderNotFound(run01_RestExceptionHandlerTest.java:228)
Caused by: java.net.URISyntaxException: Illegal character in query at index 30: /customer/orders/999?name=Ivan Petrov
	at market.run01_RestExceptionHandlerTest.testGetOrderNotFound(run01_RestExceptionHandlerTest.java:228)

[[1;31mERROR[m] testGetOrders  Time elapsed: 0.009 s  <<< ERROR!
java.lang.IllegalArgumentException: Illegal character in query at index 26: /customer/orders?name=Ivan Petrov
	at market.run01_RestExceptionHandlerTest.testGetOrders(run01_RestExceptionHandlerTest.java:204)
Caused by: java.net.URISyntaxException: Illegal character in query at index 26: /customer/orders?name=Ivan Petrov
	at market.run01_RestExceptionHandlerTest.testGetOrders(run01_RestExceptionHandlerTest.java:204)

[[1;31mERROR[m] testPayByCardUnauthorized  Time elapsed: 0.028 s  <<< FAILURE!
java.lang.AssertionError: 
1 expectation failed.
Expected status code <401> but was <406>.

	at market.run01_RestExceptionHandlerTest.testPayByCardUnauthorized(run01_RestExceptionHandlerTest.java:159)

[[1;31mERROR[m] testGetCustomer  Time elapsed: 0.007 s  <<< ERROR!
java.lang.IllegalArgumentException: Illegal character in query at index 19: /customer?name=Ivan Petrov
	at market.run01_RestExceptionHandlerTest.testGetCustomer(run01_RestExceptionHandlerTest.java:65)
Caused by: java.net.URISyntaxException: Illegal character in query at index 19: /customer?name=Ivan Petrov
	at market.run01_RestExceptionHandlerTest.testGetCustomer(run01_RestExceptionHandlerTest.java:65)

2024-08-29 15:48:42,259 INFO  [SpringContextShutdownHook] o.s.s.c.ThreadPoolTaskExecutor - Shutting down ExecutorService 'applicationTaskExecutor'
2024-08-29 15:48:42,267 INFO  [SpringContextShutdownHook] o.s.o.j.LocalContainerEntityManagerFactoryBean - Closing JPA EntityManagerFactory for persistence unit 'default'
2024-08-29 15:48:42,269 INFO  [SpringContextShutdownHook] c.z.h.HikariDataSource - HikariPool-1 - Shutdown initiated...
2024-08-29 15:48:42,272 INFO  [SpringContextShutdownHook] c.z.h.HikariDataSource - HikariPool-1 - Shutdown completed.
[[1;34mINFO[m] 
[[1;34mINFO[m] Results:
[[1;34mINFO[m] 
[[1;31mERROR[m] [1;31mFailures: [m
[[1;31mERROR[m] [1;31m  run01_RestExceptionHandlerTest.testAddItemToCart:88 1 expectation failed.
Expected status code <200> but was <401>.
[m
[[1;31mERROR[m] [1;31m  run01_RestExceptionHandlerTest.testAddItemToCartNotFound:104 1 expectation failed.
Expected status code <404> but was <401>.
[m
[[1;31mERROR[m] [1;31m  run01_RestExceptionHandlerTest.testClearCart:110 1 expectation failed.
Expected status code <200> but was <401>.
[m
[[1;31mERROR[m] [1;31m  run01_RestExceptionHandlerTest.testClearCartNotFound:122 1 expectation failed.
Expected status code <404> but was <401>.
[m
[[1;31mERROR[m] [1;31m  run01_RestExceptionHandlerTest.testCreateCustomer:264 1 expectation failed.
Expected status code <201> but was <406>.
[m
[[1;31mERROR[m] [1;31m  run01_RestExceptionHandlerTest.testCreateCustomerNotFound:280 1 expectation failed.
Expected status code <404> but was <406>.
[m
[[1;31mERROR[m] [1;31m  run01_RestExceptionHandlerTest.testCreateCustomerUnauthorized:272 1 expectation failed.
Expected status code <401> but was <406>.
[m
[[1;31mERROR[m] [1;31m  run01_RestExceptionHandlerTest.testGetProductUnauthorized:249 1 expectation failed.
Expected status code <401> but was <200>.
[m
[[1;31mERROR[m] [1;31m  run01_RestExceptionHandlerTest.testPayByCard:151 1 expectation failed.
Expected status code <201> but was <406>.
[m
[[1;31mERROR[m] [1;31m  run01_RestExceptionHandlerTest.testPayByCardNotFound:167 1 expectation failed.
Expected status code <404> but was <406>.
[m
[[1;31mERROR[m] [1;31m  run01_RestExceptionHandlerTest.testPayByCardUnauthorized:159 1 expectation failed.
Expected status code <401> but was <406>.
[m
[[1;31mERROR[m] [1;31m  run01_RestExceptionHandlerTest.testSetDelivery:129 1 expectation failed.
Expected status code <200> but was <401>.
[m
[[1;31mERROR[m] [1;31m  run01_RestExceptionHandlerTest.testSetDeliveryNotFound:143 1 expectation failed.
Expected status code <404> but was <401>.
[m
[[1;31mERROR[m] [1;31m  run01_RestExceptionHandlerTest.testUpdateContacts:182 1 expectation failed.
Expected status code <200> but was <401>.
[m
[[1;31mERROR[m] [1;31m  run01_RestExceptionHandlerTest.testUpdateContactsNotFound:198 1 expectation failed.
Expected status code <404> but was <401>.
[m
[[1;31mERROR[m] [1;31mErrors: [m
[[1;31mERROR[m] [1;31m  run01_RestExceptionHandlerTest.testGetContacts:173 » IllegalArgument Illegal c...[m
[[1;31mERROR[m] [1;31m  run01_RestExceptionHandlerTest.testGetCustomer:65 » IllegalArgument Illegal ch...[m
[[1;31mERROR[m] [1;31m  run01_RestExceptionHandlerTest.testGetCustomerNotFound:79 » IllegalArgument Il...[m
[[1;31mERROR[m] [1;31m  run01_RestExceptionHandlerTest.testGetCustomerUnauthorized:72 » IllegalArgument[m
[[1;31mERROR[m] [1;31m  run01_RestExceptionHandlerTest.testGetOrder:212 » IllegalArgument Illegal char...[m
[[1;31mERROR[m] [1;31m  run01_RestExceptionHandlerTest.testGetOrderNotFound:228 » IllegalArgument Ille...[m
[[1;31mERROR[m] [1;31m  run01_RestExceptionHandlerTest.testGetOrderUnauthorized:220 » IllegalArgument ...[m
[[1;31mERROR[m] [1;31m  run01_RestExceptionHandlerTest.testGetOrders:204 » IllegalArgument Illegal cha...[m
[[1;34mINFO[m] 
[[1;31mERROR[m] [1;31mTests run: 30, Failures: 15, Errors: 8, Skipped: 0[m
[[1;34mINFO[m] 
[[1;34mINFO[m] [1m------------------------------------------------------------------------[m
[[1;34mINFO[m] [1;31mBUILD FAILURE[m
[[1;34mINFO[m] [1m------------------------------------------------------------------------[m
[[1;34mINFO[m] Total time:  21.556 s
[[1;34mINFO[m] Finished at: 2024-08-29T15:48:42-03:00
[[1;34mINFO[m] [1m------------------------------------------------------------------------[m
[[1;31mERROR[m] Failed to execute goal [32morg.apache.maven.plugins:maven-surefire-plugin:2.22.0:test[m [1m(default-test)[m on project [36mmarket-rest[m: [1;31mThere are test failures.[m
[[1;31mERROR[m] [1;31m[m
[[1;31mERROR[m] [1;31mPlease refer to /media/rincon/63999417195/eclipse-workspace/EMB-master/jdk_11_maven/cs/rest-gui/market/market-rest/target/surefire-reports for the individual test results.[m
[[1;31mERROR[m] [1;31mPlease refer to dump files (if any exist) [date]-jvmRun[N].dump, [date].dumpstream and [date]-jvmRun[N].dumpstream.[m
[[1;31mERROR[m] -> [1m[Help 1][m
[[1;31mERROR[m] 
[[1;31mERROR[m] To see the full stack trace of the errors, re-run Maven with the [1m-e[m switch.
[[1;31mERROR[m] Re-run Maven using the [1m-X[m switch to enable full debug logging.
[[1;31mERROR[m] 
[[1;31mERROR[m] For more information about the errors and possible solutions, please read the following articles:
[[1;31mERROR[m] [1m[Help 1][m http://cwiki.apache.org/confluence/display/MAVEN/MojoFailureException

#####
